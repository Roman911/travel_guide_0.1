{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\pages\\\\create-location.tsx\";\nimport React, { useCallback, useState } from \"react\";\nimport { css } from \"aphrodite/no-important\";\nimport withApollo from \"../lib/withApollo\";\nimport { MainLayout } from \"../Components\";\nimport baseStyle from '../styles';\nimport { GoogleMaps } from \"../Containers\";\nimport { CreateLocationSelector } from \"../modules\";\n\nconst CreateLocation = () => {\n  const {\n    0: latLng,\n    1: setLatLnd\n  } = useState(null);\n  const {\n    0: isType,\n    1: setIsType\n  } = useState(null);\n  const mapContainerStyle = {\n    height: \"calc(100vh - 200px)\",\n    width: '100%'\n  };\n  const center = {\n    lat: 49.026151,\n    lng: 31.483070\n  };\n  const zoom = 6;\n  const click = useCallback(event => {\n    setLatLnd({\n      coordinateY: event.latLng.lat(),\n      coordinateX: event.latLng.lng()\n    });\n  }, []);\n\n  const isTypeSelect = isType => {\n    setIsType(isType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: 'Create Location',\n    header: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css(baseStyle.boxShadow, baseStyle.wrapperCreateLocation),\n      children: [/*#__PURE__*/_jsxDEV(GoogleMaps, {\n        mapContainerStyle: mapContainerStyle,\n        center: center,\n        zoom: zoom,\n        disableDefaultUI: false,\n        click: click,\n        search: true,\n        isType: isType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateLocationSelector, {\n        latLng: latLng,\n        isTypeSelect: isTypeSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\nexport default withApollo(CreateLocation);","map":{"version":3,"sources":["D:/web/travel_guide/client/pages/create-location.tsx"],"names":["React","useCallback","useState","css","withApollo","MainLayout","baseStyle","GoogleMaps","CreateLocationSelector","CreateLocation","latLng","setLatLnd","isType","setIsType","mapContainerStyle","height","width","center","lat","lng","zoom","click","event","coordinateY","coordinateX","isTypeSelect","boxShadow","wrapperCreateLocation"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,sBAAT,QAAuC,YAAvC;;AAEA,MAAMC,cAAc,GAAE,MAAM;AAC1B,QAAM;AAAA,OAAEC,MAAF;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAAEU,MAAF;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMY,iBAAiB,GAAG;AAAEC,IAAAA,MAAM,EAAE,qBAAV;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAA1B;AACA,QAAMC,MAAM,GAAG;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAf;AACA,QAAMC,IAAI,GAAG,CAAb;AACA,QAAMC,KAAK,GAAGpB,WAAW,CAAEqB,KAAD,IAAW;AACnCX,IAAAA,SAAS,CAAC;AACRY,MAAAA,WAAW,EAAED,KAAK,CAACZ,MAAN,CAAaQ,GAAb,EADL;AAERM,MAAAA,WAAW,EAAEF,KAAK,CAACZ,MAAN,CAAaS,GAAb;AAFL,KAAD,CAAT;AAID,GALwB,EAKtB,EALsB,CAAzB;;AAMA,QAAMM,YAAY,GAAIb,MAAD,IAAoB;AACvCC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAFD;;AAGA,sBAAO,QAAC,UAAD;AAAY,IAAA,KAAK,EAAE,iBAAnB;AAAsC,IAAA,MAAM,EAAC,oEAA7C;AAAA,2BACL;AAAK,MAAA,SAAS,EAAGT,GAAG,CAACG,SAAS,CAACoB,SAAX,EAAsBpB,SAAS,CAACqB,qBAAhC,CAApB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,iBAAiB,EAAGb,iBAAhC;AAAoD,QAAA,MAAM,EAAGG,MAA7D;AAAsE,QAAA,IAAI,EAAGG,IAA7E;AAAoF,QAAA,gBAAgB,EAAG,KAAvG;AAA+G,QAAA,KAAK,EAAGC,KAAvH;AAA+H,QAAA,MAAM,EAAG,IAAxI;AAA+I,QAAA,MAAM,EAAGT;AAAxJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,sBAAD;AAAwB,QAAA,MAAM,EAAGF,MAAjC;AAA0C,QAAA,YAAY,EAAGe;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,CArBD;;AAuBA,eAAerB,UAAU,CAACK,cAAD,CAAzB","sourcesContent":["import React, {useCallback, useState} from \"react\"\r\nimport { css } from \"aphrodite/no-important\"\r\nimport withApollo from \"../lib/withApollo\"\r\nimport { MainLayout } from \"../Components\"\r\nimport baseStyle from '../styles'\r\nimport { GoogleMaps } from \"../Containers\"\r\nimport { CreateLocationSelector } from \"../modules\"\r\n\r\nconst CreateLocation =() => {\r\n  const [ latLng, setLatLnd ] = useState(null)\r\n  const [ isType, setIsType ] = useState(null)\r\n  const mapContainerStyle = { height: \"calc(100vh - 200px)\", width: '100%' }\r\n  const center = { lat: 49.026151, lng: 31.483070 }\r\n  const zoom = 6\r\n  const click = useCallback((event) => {\r\n    setLatLnd({\r\n      coordinateY: event.latLng.lat(),\r\n      coordinateX: event.latLng.lng()\r\n    })\r\n  }, [])\r\n  const isTypeSelect = (isType: string) => {\r\n    setIsType(isType)\r\n  }\r\n  return <MainLayout title={'Create Location'} header='Редагування'>\r\n    <div className={ css(baseStyle.boxShadow, baseStyle.wrapperCreateLocation) }>\r\n      <GoogleMaps mapContainerStyle={ mapContainerStyle } center={ center } zoom={ zoom } disableDefaultUI={ false } click={ click } search={ true } isType={ isType } />\r\n      <CreateLocationSelector latLng={ latLng } isTypeSelect={ isTypeSelect } />\r\n    </div>\r\n  </MainLayout>\r\n}\r\n\r\nexport default withApollo(CreateLocation)"]},"metadata":{},"sourceType":"module"}