{"ast":null,"code":"import _defineProperty from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport withApollo from 'next-with-apollo';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nexport default withApollo(function (_ref) {\n  var initialState = _ref.initialState;\n  return new ApolloClient({\n    uri: 'http://localhost:3005/graphql',\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}, {\n  render: function render(_ref2) {\n    var Page = _ref2.Page,\n        props = _ref2.props;\n    return /*#__PURE__*/_jsx(ApolloProvider, {\n      client: props.apollo,\n      children: /*#__PURE__*/_jsx(Page, _objectSpread({}, props))\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}