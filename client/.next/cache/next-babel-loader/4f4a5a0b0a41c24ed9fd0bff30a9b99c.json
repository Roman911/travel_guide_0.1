{"ast":null,"code":"import _defineProperty from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\Components\\\\Formik\\\\Input.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Field, ErrorMessage } from 'formik';\nimport { css } from \"aphrodite/no-important\";\nimport { TextError } from \"..\";\nimport styles from \"./styles\";\nexport var Input = function Input(_ref) {\n  var id = _ref.id,\n      type = _ref.type,\n      label = _ref.label;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(styles.inputWrapper),\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      id: id,\n      name: id,\n      children: function children(_ref2) {\n        var field = _ref2.field,\n            _ref2$form = _ref2.form,\n            touched = _ref2$form.touched,\n            errors = _ref2$form.errors,\n            rest = _objectWithoutProperties(_ref2, [\"field\", \"form\"]);\n\n        var value = field.value;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: css(styles.label, value !== '' ? styles.labelTouched : null),\n            htmlFor: id,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n            type: type\n          }, field), rest), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, _this), touched[field.name] && errors[field.name] && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: css(styles.icon),\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 58\n          }, _this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: id,\n      className: \"left\",\n      component: TextError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, _this);\n};\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/web/travel_guide/client/Components/Formik/Input.tsx"],"names":["React","Field","ErrorMessage","css","TextError","styles","Input","id","type","label","inputWrapper","field","form","touched","errors","rest","value","labelTouched","name","icon"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,IAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAQA,OAAO,IAAMC,KAA2B,GAAG,SAA9BA,KAA8B,OAAwB;AAAA,MAArBC,EAAqB,QAArBA,EAAqB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACjE,sBAAO;AAAK,IAAA,SAAS,EAAGN,GAAG,CAACE,MAAM,CAACK,YAAR,CAApB;AAAA,4BACL,QAAC,KAAD;AAAO,MAAA,EAAE,EAAGH,EAAZ;AAAiB,MAAA,IAAI,EAAGA,EAAxB;AAAA,gBACG,yBAAmD;AAAA,YAAhDI,KAAgD,SAAhDA,KAAgD;AAAA,+BAAzCC,IAAyC;AAAA,YAAjCC,OAAiC,cAAjCA,OAAiC;AAAA,YAAxBC,MAAwB,cAAxBA,MAAwB;AAAA,YAAXC,IAAW;;AAAA,YAC1CC,KAD0C,GAChCL,KADgC,CAC1CK,KAD0C;AAElD,4BAAO;AAAA,kCACL;AAAO,YAAA,SAAS,EAAGb,GAAG,CAACE,MAAM,CAACI,KAAR,EAAeO,KAAK,KAAK,EAAV,GAAeX,MAAM,CAACY,YAAtB,GAAqC,IAApD,CAAtB;AAAkF,YAAA,OAAO,EAAGV,EAA5F;AAAA,sBAAmGE;AAAnG;AAAA;AAAA;AAAA;AAAA,mBADK,eAEL;AAAO,YAAA,IAAI,EAAED;AAAb,aAAuBG,KAAvB,GAAkCI,IAAlC;AAAA;AAAA;AAAA;AAAA,mBAFK,EAGHF,OAAO,CAACF,KAAK,CAACO,IAAP,CAAP,IAAuBJ,MAAM,CAACH,KAAK,CAACO,IAAP,CAA7B,iBAA6C;AAAG,YAAA,SAAS,EAAGf,GAAG,CAACE,MAAM,CAACc,IAAR,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAH1C;AAAA,wBAAP;AAKD;AARH;AAAA;AAAA;AAAA;AAAA,aADK,eAWL,QAAC,YAAD;AAAc,MAAA,IAAI,EAAGZ,EAArB;AAA0B,MAAA,SAAS,EAAC,MAApC;AAA2C,MAAA,SAAS,EAAGH;AAAvD;AAAA;AAAA;AAAA;AAAA,aAXK;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAaD,CAdM;KAAME,K","sourcesContent":["import React from \"react\"\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport { css } from \"aphrodite/no-important\"\r\nimport { TextError } from \"..\"\r\nimport styles from \"./styles\"\r\n\r\ntype InputProps = {\r\n  id: string\r\n  type: string\r\n  label: string\r\n}\r\n\r\nexport const Input: React.FC<InputProps> = ({ id, type, label}) => {\r\n  return <div className={ css(styles.inputWrapper) }>\r\n    <Field id={ id } name={ id }>\r\n      {({ field, form: { touched, errors }, ...rest }) => {\r\n        const { value } = field\r\n        return <>\r\n          <label className={ css(styles.label, value !== '' ? styles.labelTouched : null) } htmlFor={ id }>{ label }</label>\r\n          <input type={type} {...field} {...rest} />\r\n          { touched[field.name] && errors[field.name] && <p className={ css(styles.icon) }>!</p> }\r\n        </>\r\n      }}\r\n    </Field>\r\n    <ErrorMessage name={ id } className='left' component={ TextError } />\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}