{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\Components\\\\Formik\\\\Radio.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Field } from \"formik\";\nimport { css } from \"aphrodite/no-important\";\nimport baseStyles from '../../styles';\nimport styles from \"./styles\";\nexport const Radio = ({\n  name,\n  label,\n  options\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(styles.inputWrapper),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: css(styles.label, styles.labelTouched),\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: name,\n      children: ({\n        field\n      }) => {\n        const {\n          value\n        } = field;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(baseStyles.flex),\n          children: options.map((option, index) => {\n            const label = option.id === value ? css(styles.labelRadio, styles.labelActive, baseStyles.boxShadow) : css(styles.labelRadio);\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n                className: css(styles.inputRadio),\n                type: \"radio\",\n                id: option.id\n              }, field), {}, {\n                value: option.id,\n                checked: value === option.id\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: css(baseStyles.flex, styles.labelWrapper),\n                htmlFor: option.id,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 17\n                }, this), option.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/Components/Formik/Radio.tsx"],"names":["React","Field","css","baseStyles","styles","Radio","name","label","options","inputWrapper","labelTouched","field","value","flex","map","option","index","id","labelRadio","labelActive","boxShadow","inputRadio","labelWrapper","title"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAaA,OAAO,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AACvE,sBAAO;AAAK,IAAA,SAAS,EAAGN,GAAG,CAACE,MAAM,CAACK,YAAR,CAApB;AAAA,4BACL;AAAO,MAAA,OAAO,EAAGH,IAAjB;AAAwB,MAAA,SAAS,EAAGJ,GAAG,CAACE,MAAM,CAACG,KAAR,EAAeH,MAAM,CAACM,YAAtB,CAAvC;AAAA,gBAA+EH;AAA/E;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,QAAC,KAAD;AAAO,MAAA,IAAI,EAAGD,IAAd;AAAA,gBACG,CAAC;AAAEK,QAAAA;AAAF,OAAD,KAAe;AACd,cAAM;AAAEC,UAAAA;AAAF,YAAYD,KAAlB;AACA,4BAAO;AAAK,UAAA,SAAS,EAAGT,GAAG,CAACC,UAAU,CAACU,IAAZ,CAApB;AAAA,oBACJL,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,kBAAMT,KAAK,GAAGQ,MAAM,CAACE,EAAP,KAAcL,KAAd,GAAsBV,GAAG,CAAEE,MAAM,CAACc,UAAT,EAAqBd,MAAM,CAACe,WAA5B,EAAyChB,UAAU,CAACiB,SAApD,CAAzB,GAA0FlB,GAAG,CAACE,MAAM,CAACc,UAAR,CAA3G;AACA,gCAAO,QAAC,KAAD,CAAO,QAAP;AAAA,sCACL;AACE,gBAAA,SAAS,EAAGhB,GAAG,CAACE,MAAM,CAACiB,UAAR,CADjB;AAEE,gBAAA,IAAI,EAAC,OAFP;AAGE,gBAAA,EAAE,EAAGN,MAAM,CAACE;AAHd,iBAION,KAJP;AAKE,gBAAA,KAAK,EAAGI,MAAM,CAACE,EALjB;AAME,gBAAA,OAAO,EAAGL,KAAK,KAAKG,MAAM,CAACE;AAN7B;AAAA;AAAA;AAAA;AAAA,sBADK,eASL;AAAO,gBAAA,SAAS,EAAGf,GAAG,CAAEC,UAAU,CAACU,IAAb,EAAmBT,MAAM,CAACkB,YAA1B,CAAtB;AAAgE,gBAAA,OAAO,EAAGP,MAAM,CAACE,EAAjF;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAGV;AAAjB;AAAA;AAAA;AAAA;AAAA,wBADF,EAEIQ,MAAM,CAACQ,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA,sBATK;AAAA,eAAsBP,KAAtB;AAAA;AAAA;AAAA;AAAA,oBAAP;AAcD,WAhBA;AADI;AAAA;AAAA;AAAA;AAAA,gBAAP;AAmBD;AAtBH;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA2BD,CA5BM","sourcesContent":["import React from \"react\"\r\nimport { Field } from \"formik\"\r\nimport { css } from \"aphrodite/no-important\"\r\nimport baseStyles from '../../styles'\r\nimport styles from \"./styles\"\r\n\r\ntype optionsProps = {\r\n  id: string\r\n  title: string\r\n}\r\n\r\ntype RadioProps = {\r\n  name: string\r\n  label: string\r\n  options: [optionsProps]\r\n}\r\n\r\nexport const Radio: React.FC<RadioProps> = ({ name, label, options }) => {\r\n  return <div className={ css(styles.inputWrapper) }>\r\n    <label htmlFor={ name } className={ css(styles.label, styles.labelTouched) }>{ label }</label>\r\n    <Field name={ name } >\r\n      {({ field }) => {\r\n        const { value } = field\r\n        return <div className={ css(baseStyles.flex) }>\r\n          {options.map((option, index) => {\r\n            const label = option.id === value ? css( styles.labelRadio, styles.labelActive, baseStyles.boxShadow) : css(styles.labelRadio)\r\n            return <React.Fragment key={ index } >\r\n              <input\r\n                className={ css(styles.inputRadio) }\r\n                type='radio'\r\n                id={ option.id }\r\n                { ...field }\r\n                value={ option.id }\r\n                checked={ value === option.id }\r\n              />\r\n              <label className={ css( baseStyles.flex, styles.labelWrapper) } htmlFor={ option.id } >\r\n                <div className={ label } />\r\n                { option.title }\r\n              </label>\r\n            </React.Fragment>\r\n          })}\r\n        </div>\r\n      }}\r\n    </Field>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}