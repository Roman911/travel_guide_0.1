{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Likes\\\\Containers\\\\Likes.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Like } from '../Components/Like';\nimport { addLikeMutation, removeLikeMutation } from './mutations';\nimport { modalActions } from \"../../../redux/actions\";\nexport const Likes = ({\n  id,\n  likes,\n  post\n}) => {\n  const {\n    0: quantityLikes,\n    1: setQuantityLikes\n  } = useState(likes.length);\n  const {\n    0: userLike,\n    1: setUserLike\n  } = useState(false);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    data\n  } = user;\n  const userId = data ? data.userId : undefined;\n  useEffect(() => {\n    likes.filter(item => {\n      if (item === userId) {\n        setUserLike(true);\n      } else {\n        setUserLike(false);\n      }\n    });\n  }, [likes, userId]);\n  const [addLike] = useMutation(addLikeMutation);\n  const [removeLike] = useMutation(removeLikeMutation);\n\n  const handleChangeAdd = () => {\n    setQuantityLikes(quantityLikes + 1);\n    setUserLike(true);\n\n    if (userId) {\n      addLike({\n        variables: {\n          postId: id,\n          userId: userId\n        }\n      }).then(r => r);\n    } else {\n      dispatch(modalActions.showModal('Для виконання данної дії потрібно авторизоватись'));\n    }\n  };\n\n  const handleChangeRemove = () => {\n    setQuantityLikes(quantityLikes - 1);\n    setUserLike(false);\n    removeLike({\n      variables: {\n        postId: id,\n        userId: userId\n      }\n    }).then(r => r);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Like, {\n    post: post,\n    quantityLikes: quantityLikes,\n    userLike: userLike,\n    handleChangeAdd: handleChangeAdd,\n    handleChangeRemove: handleChangeRemove\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Likes/Containers/Likes.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useMutation","Like","addLikeMutation","removeLikeMutation","modalActions","Likes","id","likes","post","quantityLikes","setQuantityLikes","length","userLike","setUserLike","user","state","dispatch","data","userId","undefined","filter","item","addLike","removeLike","handleChangeAdd","variables","postId","then","r","showModal","handleChangeRemove"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,aAApD;AACA,SAASC,YAAT,QAA6B,wBAA7B;AASA,OAAO,MAAMC,KAA4B,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA;AAAb,CAAD,KAAyB;AACnE,QAAM;AAAA,OAAEC,aAAF;AAAA,OAAiBC;AAAjB,MAAsCb,QAAQ,CAACU,KAAK,CAACI,MAAP,CAApD;AACA,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMiB,IAAI,GAAGf,WAAW,CAAEgB,KAAD,IAA2BA,KAAK,CAACD,IAAlC,CAAxB;AACA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAWH,IAAjB;AACA,QAAMI,MAAM,GAAGD,IAAI,GAAGA,IAAI,CAACC,MAAR,GAAiBC,SAApC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAACa,MAAN,CAAcC,IAAD,IAA8B;AACzC,UAAIA,IAAI,KAAKH,MAAb,EAAqB;AACnBL,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,KAND;AAOD,GARQ,EAQN,CAACN,KAAD,EAAQW,MAAR,CARM,CAAT;AAUA,QAAM,CAAEI,OAAF,IAActB,WAAW,CAACE,eAAD,CAA/B;AACA,QAAM,CAAEqB,UAAF,IAAiBvB,WAAW,CAACG,kBAAD,CAAlC;;AAEA,QAAMqB,eAAe,GAAG,MAAM;AAC5Bd,IAAAA,gBAAgB,CAACD,aAAa,GAAE,CAAhB,CAAhB;AACAI,IAAAA,WAAW,CAAC,IAAD,CAAX;;AACA,QAAIK,MAAJ,EAAY;AACVI,MAAAA,OAAO,CAAC;AACNG,QAAAA,SAAS,EAAE;AAAEC,UAAAA,MAAM,EAAEpB,EAAV;AAAcY,UAAAA,MAAM,EAAEA;AAAtB;AADL,OAAD,CAAP,CAEGS,IAFH,CAEQC,CAAC,IAAGA,CAFZ;AAGD,KAJD,MAIO;AACLZ,MAAAA,QAAQ,CAACZ,YAAY,CAACyB,SAAb,CAAuB,kDAAvB,CAAD,CAAR;AACD;AACF,GAVD;;AAWA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BpB,IAAAA,gBAAgB,CAACD,aAAa,GAAE,CAAhB,CAAhB;AACAI,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAU,IAAAA,UAAU,CAAC;AACTE,MAAAA,SAAS,EAAE;AAAEC,QAAAA,MAAM,EAAEpB,EAAV;AAAcY,QAAAA,MAAM,EAAEA;AAAtB;AADF,KAAD,CAAV,CAGGS,IAHH,CAGQC,CAAC,IAAGA,CAHZ;AAID,GAPD;;AAQA,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAGpB,IAAb;AAAoB,IAAA,aAAa,EAAGC,aAApC;AAAoD,IAAA,QAAQ,EAAGG,QAA/D;AAA0E,IAAA,eAAe,EAAGY,eAA5F;AAA8G,IAAA,kBAAkB,EAAGM;AAAnI;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzCM","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { Like } from '../Components/Like'\r\nimport { addLikeMutation, removeLikeMutation } from './mutations'\r\nimport { modalActions } from \"../../../redux/actions\"\r\n\r\nimport { User } from \"../../../types/user\"\r\ntype MyLikesProps = {\r\n  id: string\r\n  likes: string[]\r\n  post: boolean\r\n}\r\n\r\nexport const Likes:React.FC<MyLikesProps> = ({ id, likes, post }) => {\r\n  const [ quantityLikes, setQuantityLikes ] = useState(likes.length)\r\n  const [ userLike, setUserLike ] = useState(false)\r\n  const user = useSelector((state: { user: User }) => state.user)\r\n  const dispatch = useDispatch()\r\n  const { data } = user\r\n  const userId = data ? data.userId : undefined\r\n\r\n  useEffect(() => {\r\n    likes.filter((item: string | undefined) => {\r\n      if (item === userId) {\r\n        setUserLike(true)\r\n      } else {\r\n        setUserLike(false)\r\n      }\r\n    })\r\n  }, [likes, userId])\r\n\r\n  const [ addLike ] = useMutation(addLikeMutation)\r\n  const [ removeLike ] = useMutation(removeLikeMutation)\r\n\r\n  const handleChangeAdd = () => {\r\n    setQuantityLikes(quantityLikes +1)\r\n    setUserLike(true)\r\n    if (userId) {\r\n      addLike({\r\n        variables: { postId: id, userId: userId },\r\n      }).then(r =>r)\r\n    } else {\r\n      dispatch(modalActions.showModal('Для виконання данної дії потрібно авторизоватись'))\r\n    }\r\n  }\r\n  const handleChangeRemove = () => {\r\n    setQuantityLikes(quantityLikes -1)\r\n    setUserLike(false)\r\n    removeLike({\r\n      variables: { postId: id, userId: userId }\r\n    })\r\n      .then(r =>r)\r\n  }\r\n  return <Like post={ post } quantityLikes={ quantityLikes } userLike={ userLike } handleChangeAdd={ handleChangeAdd } handleChangeRemove={ handleChangeRemove }/>\r\n}"]},"metadata":{},"sourceType":"module"}