{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form } from 'formik';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { loginQuery } from '../apollo/queries/login';\nimport validateForm from '../utils/validate';\nimport { Loading, MainLayout, HeaderForm, AuthForm } from \"../Components\";\nimport withApollo from \"../lib/withApollo\";\nimport { userActions, modalActions } from '../redux/actions';\n\nconst Login = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [userData, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(loginQuery);\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n\n  const validate = values => {\n    let errors = {};\n    validateForm({\n      values,\n      errors\n    });\n    return errors;\n  };\n\n  const onSubmit = (values, onSubmitProps) => {\n    userData({\n      variables: {\n        email: values.email,\n        password: values.password\n      }\n    });\n    onSubmitProps.setSubmitting(false);\n  };\n\n  if (loading) return /*#__PURE__*/_jsx(Loading, {});\n\n  if (error) {\n    dispatch(modalActions.showModal('Неправильний логін або пароль'));\n  }\n\n  if (data) {\n    const {\n      login\n    } = data;\n    dispatch(userActions.setData(login));\n    localStorage.setItem('userData', JSON.stringify({\n      userId: login.userId,\n      token: login.token,\n      name: login.name,\n      avatar: login.avatar,\n      email: login.email\n    }));\n    dispatch(modalActions.showModal('Ви успішно увійшли!'));\n    router.push('/').then(r => r);\n  }\n\n  const dataForm = [{\n    control: 'input',\n    id: 'email',\n    type: 'email',\n    label: 'Введіть email'\n  }, {\n    control: 'input',\n    id: 'password',\n    type: 'password',\n    label: 'Введіть пароль'\n  }];\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    title: \"\\u0412\\u0445\\u0456\\u0434\",\n    auth: true,\n    children: [/*#__PURE__*/_jsx(HeaderForm, {\n      title: \"\\u0412\\u0445\\u0456\\u0434\",\n      text: \"\\u0423 \\u0432\\u0430\\u0441 \\u0449\\u0435 \\u043D\\u0435\\u043C\\u0430 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?\",\n      link: \"/registration\",\n      btn: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438\"\n    }), /*#__PURE__*/_jsx(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validate: validate,\n      children: formik => {\n        return /*#__PURE__*/_jsx(Form, {\n          children: /*#__PURE__*/_jsx(AuthForm, {\n            formik: formik,\n            dataForm: dataForm,\n            btn: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n          })\n        });\n      }\n    })]\n  });\n};\n\nexport default withApollo(Login);","map":null,"metadata":{},"sourceType":"module"}