{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Comments\\\\Components\\\\Comment.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { css } from \"aphrodite/no-important\";\nimport baseStyle from \"../../../styles\";\nimport styles from \"./styles\";\nimport { ButtonLink, Date, NameUser } from \"../../../Components\";\nimport { CreateComment } from \"../Containers/CreateComment\";\nimport { CommentText } from \"./CommentText\";\nimport { ShowComment } from \"../Containers/ShowComment\";\nexport var Comment = function Comment(_ref) {\n  _s();\n\n  var name = _ref.name,\n      date = _ref.date,\n      text = _ref.text,\n      idComment = _ref.idComment,\n      comments = _ref.comments,\n      postId = _ref.postId;\n\n  var _useState = useState(false),\n      showCreateComment = _useState[0],\n      setShowCreateComment = _useState[1];\n\n  var comment = comments.length !== 0 && comments.map(function (item, index) {\n    return /*#__PURE__*/_jsxDEV(ShowComment, {\n      text: item.text,\n      _id: item.idAuthor,\n      idComment: idComment,\n      comments: [],\n      date: item.createdAt,\n      postId: postId\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, _this);\n  });\n\n  var handleClick = function handleClick() {\n    setShowCreateComment(!showCreateComment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css(styles.blockUser),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css(baseStyle.flexSB),\n      children: [/*#__PURE__*/_jsxDEV(NameUser, {\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Date, {\n        date: date,\n        format: 'LL'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(CommentText, {\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(ButtonLink, {\n      handleClick: handleClick,\n      nameBtn: \"\\u0432\\u0456\\u0434\\u043F\\u043E\\u0432\\u0456\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, _this), showCreateComment && /*#__PURE__*/_jsxDEV(CreateComment, {\n      idComment: idComment,\n      isFirstComment: false,\n      handleClick: handleClick,\n      postId: postId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }, _this), comment]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Comment, \"eN6AEkzk+KVlTsq+6VP2CBiyGhU=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Comments/Components/Comment.tsx"],"names":["React","useState","css","baseStyle","styles","ButtonLink","Date","NameUser","CreateComment","CommentText","ShowComment","Comment","name","date","text","idComment","comments","postId","showCreateComment","setShowCreateComment","comment","length","map","item","index","idAuthor","createdAt","handleClick","blockUser","flexSB"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,QAA2C,qBAA3C;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAWA,OAAO,IAAMC,OAAiC,GAAG,SAApCA,OAAoC,OAAuD;AAAA;;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBAClDhB,QAAQ,CAAC,KAAD,CAD0C;AAAA,MAC9FiB,iBAD8F;AAAA,MAC3EC,oBAD2E;;AAEtG,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,MAAT,KAAoB,CAApB,IAAyBL,QAAQ,CAACM,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACrE,wBAAO,QAAC,WAAD;AAA2B,MAAA,IAAI,EAAGD,IAAI,CAACT,IAAvC;AAA8C,MAAA,GAAG,EAAGS,IAAI,CAACE,QAAzD;AAAoE,MAAA,SAAS,EAAGV,SAAhF;AAA4F,MAAA,QAAQ,EAAG,EAAvG;AAA6G,MAAA,IAAI,EAAGQ,IAAI,CAACG,SAAzH;AAAqI,MAAA,MAAM,EAAGT;AAA9I,OAAmBO,KAAnB;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAFwC,CAAzC;;AAGA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBR,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAFD;;AAGA,sBAAO;AAAS,IAAA,SAAS,EAAGhB,GAAG,CAACE,MAAM,CAACwB,SAAR,CAAxB;AAAA,4BACL;AAAK,MAAA,SAAS,EAAG1B,GAAG,CAACC,SAAS,CAAC0B,MAAX,CAApB;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAGjB;AAAjB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAGC,IAAb;AAAoB,QAAA,MAAM,EAAG;AAA7B;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADK,eAKL,QAAC,WAAD;AAAa,MAAA,IAAI,EAAGC;AAApB;AAAA;AAAA;AAAA;AAAA,aALK,eAML,QAAC,UAAD;AAAY,MAAA,WAAW,EAAGa,WAA1B;AAAwC,MAAA,OAAO,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,aANK,EAOHT,iBAAiB,iBAAI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAGH,SAA3B;AAAuC,MAAA,cAAc,EAAG,KAAxD;AAAgE,MAAA,WAAW,EAAGY,WAA9E;AAA4F,MAAA,MAAM,EAAGV;AAArG;AAAA;AAAA;AAAA;AAAA,aAPlB,EAQHG,OARG;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAUD,CAlBM;;GAAMT,O;;KAAAA,O","sourcesContent":["import React, {useState} from \"react\"\r\nimport { css } from \"aphrodite/no-important\"\r\nimport baseStyle from \"../../../styles\"\r\nimport styles from \"./styles\"\r\nimport { ButtonLink, Date, NameUser } from \"../../../Components\"\r\nimport { CreateComment } from \"../Containers/CreateComment\"\r\nimport { CommentText } from \"./CommentText\"\r\nimport { ShowComment } from \"../Containers/ShowComment\"\r\n\r\ntype MyCommentProps = {\r\n  name: string\r\n  date: string\r\n  text: string\r\n  idComment: string | undefined\r\n  comments: any[]\r\n  postId: string\r\n}\r\n\r\nexport const Comment: React.FC<MyCommentProps> = ({ name, date, text, idComment, comments, postId }) => {\r\n  const [ showCreateComment, setShowCreateComment ] = useState(false)\r\n  const comment = comments.length !== 0 && comments.map((item, index) => {\r\n    return <ShowComment key={ index } text={ item.text } _id={ item.idAuthor } idComment={ idComment } comments={ [] }  date={ item.createdAt } postId={ postId } />\r\n  })\r\n  const handleClick = () => {\r\n    setShowCreateComment(!showCreateComment)\r\n  }\r\n  return <section className={ css(styles.blockUser) }>\r\n    <div className={ css(baseStyle.flexSB) }>\r\n      <NameUser name={ name } />\r\n      <Date date={ date } format={ 'LL' } />\r\n    </div>\r\n    <CommentText text={ text } />\r\n    <ButtonLink handleClick={ handleClick } nameBtn='відповісти' />\r\n    { showCreateComment && <CreateComment idComment={ idComment } isFirstComment={ false } handleClick={ handleClick } postId={ postId } /> }\r\n    { comment }\r\n  </section>\r\n}"]},"metadata":{},"sourceType":"module"}