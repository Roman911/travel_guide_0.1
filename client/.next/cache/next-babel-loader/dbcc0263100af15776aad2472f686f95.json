{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\pages\\\\profile.tsx\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { locationsUserQuery } from '../apollo/queries/locationsUser';\nimport { Loading, MainLayout, ProfileMain } from \"../Components\";\nimport withApollo from \"../lib/withApollo\";\nimport { useRedirect } from \"../hooks/useRedirect\";\n\nconst Profile = () => {\n  const user = useSelector(state => state.user);\n\n  if (!user) {\n    console.log('user');\n    return useRedirect('/');\n  }\n\n  const {\n    0: nameSection,\n    1: setNameSection\n  } = useState('wantToVisit');\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(locationsUserQuery, {\n    variables: {\n      userId: user.data.userId,\n      action: 'wantToVisit'\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return `Error! ${error}`;\n  const {\n    locationsUserList\n  } = data;\n\n  const handleClick = action => {\n    setNameSection(action);\n    refetch({\n      userId: user.data.userId,\n      action: action\n    }).then(r => r);\n  };\n\n  return user.data && /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: \"Profile\",\n    children: /*#__PURE__*/_jsxDEV(ProfileMain, {\n      handleClick: handleClick,\n      data: user.data,\n      nameSection: nameSection,\n      locationsUserList: locationsUserList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo(Profile);","map":{"version":3,"sources":["D:/web/travel_guide/client/pages/profile.tsx"],"names":["React","useState","useSelector","useQuery","locationsUserQuery","Loading","MainLayout","ProfileMain","withApollo","useRedirect","Profile","user","state","console","log","nameSection","setNameSection","loading","error","data","refetch","variables","userId","action","locationsUserList","handleClick","then","r"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B,QAAiD,eAAjD;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,SAAQC,WAAR,QAA0B,sBAA1B;;AAEA,MAAMC,OAAiB,GAAG,MAAW;AACnC,QAAMC,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAA2BA,KAAK,CAACD,IAAlC,CAAxB;;AACA,MAAI,CAACA,IAAL,EAAW;AACTE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAOL,WAAW,CAAC,GAAD,CAAlB;AACD;;AACD,QAAM;AAAA,OAAEM,WAAF;AAAA,OAAeC;AAAf,MAAkCf,QAAQ,CAAC,aAAD,CAAhD;AACA,QAAM;AAAEgB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAoCjB,QAAQ,CAACC,kBAAD,EAAqB;AACrEiB,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEX,IAAI,CAACQ,IAAL,CAAUG,MADT;AAETC,MAAAA,MAAM,EAAE;AAFC;AAD0D,GAArB,CAAlD;AAMA,MAAIN,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AACX,QAAM;AAAEM,IAAAA;AAAF,MAAwBL,IAA9B;;AAEA,QAAMM,WAAW,GAAIF,MAAD,IAAoB;AACtCP,IAAAA,cAAc,CAACO,MAAD,CAAd;AACAH,IAAAA,OAAO,CAAC;AACNE,MAAAA,MAAM,EAAEX,IAAI,CAACQ,IAAL,CAAUG,MADZ;AAENC,MAAAA,MAAM,EAAEA;AAFF,KAAD,CAAP,CAGGG,IAHH,CAGQC,CAAC,IAAIA,CAHb;AAID,GAND;;AAOA,SAAOhB,IAAI,CAACQ,IAAL,iBACL,QAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAGM,WAA3B;AAAyC,MAAA,IAAI,EAAGd,IAAI,CAACQ,IAArD;AAA4D,MAAA,WAAW,EAAGJ,WAA1E;AAAwF,MAAA,iBAAiB,EAAGS;AAA5G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CA5BD;;AA8BA,eAAehB,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { locationsUserQuery } from '../apollo/queries/locationsUser'\r\nimport { Loading, MainLayout, ProfileMain } from \"../Components\"\r\nimport withApollo from \"../lib/withApollo\"\r\nimport { User } from '../types/user'\r\nimport {useRedirect} from \"../hooks/useRedirect\"\r\n\r\nconst Profile: React.FC = (): any => {\r\n  const user = useSelector((state: { user: User }) => state.user)\r\n  if (!user) {\r\n    console.log('user')\r\n    return useRedirect('/')\r\n  }\r\n  const [ nameSection, setNameSection ] = useState('wantToVisit')\r\n  const { loading, error, data, refetch } = useQuery(locationsUserQuery, {\r\n    variables: {\r\n      userId: user.data.userId,\r\n      action: 'wantToVisit'\r\n    }\r\n  })\r\n  if (loading) return <Loading />\r\n  if (error) return `Error! ${error}`\r\n  const { locationsUserList } = data\r\n\r\n  const handleClick = (action: string) => {\r\n    setNameSection(action)\r\n    refetch({\r\n      userId: user.data.userId,\r\n      action: action\r\n    }).then(r => r)\r\n  }\r\n  return user.data &&\r\n    <MainLayout title='Profile'>\r\n      <ProfileMain handleClick={ handleClick } data={ user.data } nameSection={ nameSection } locationsUserList={ locationsUserList } />\r\n    </MainLayout>\r\n}\r\n\r\nexport default withApollo(Profile)"]},"metadata":{},"sourceType":"module"}