{"ast":null,"code":"import _slicedToArray from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Comments\\\\Containers\\\\CreateComment.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { useSelector } from \"react-redux\";\nimport { Formik, Form } from 'formik';\nimport { useMutation } from '@apollo/react-hooks';\nimport { css } from \"aphrodite/no-important\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faOptinMonster } from \"@fortawesome/free-brands-svg-icons\";\nimport * as Yup from 'yup';\nimport { Avatar, Button, ButtonLink, FormikControl } from \"../../../Components\";\nimport loginStyles from '../../../styles/login';\nimport styles from '../Components/styles';\nimport { CreateCommentMutation, AddCommentMutation } from './mutations';\nimport { commentsQuery } from \"./querys\";\nexport var CreateComment = function CreateComment(_ref) {\n  _s();\n\n  var postId = _ref.postId,\n      idComment = _ref.idComment,\n      isFirstComment = _ref.isFirstComment,\n      handleClick = _ref.handleClick;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      data = _useSelector.data;\n\n  var _useMutation = useMutation(CreateCommentMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createComment = _useMutation2[0];\n\n  var _useMutation3 = useMutation(AddCommentMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      addComment = _useMutation4[0];\n\n  var initialValues = {\n    text: ''\n  };\n  var validationSchema = Yup.object({\n    text: Yup.string().min(3, 'Короткий коментар').required('Required')\n  });\n\n  var onSubmit = function onSubmit(values, _ref2) {\n    var resetForm = _ref2.resetForm;\n    var ref = [{\n      query: commentsQuery,\n      variables: {\n        postId: postId\n      }\n    }];\n    var query = {\n      variables: {\n        idAuthor: data.userId,\n        _id: idComment,\n        postId: postId,\n        text: values.text\n      },\n      refetchQueries: ref\n    };\n\n    if (isFirstComment) {\n      createComment(query).then(function (data) {\n        if (data) {\n          resetForm();\n        }\n      });\n    } else {\n      addComment(query).then(function (data) {\n        if (data) {\n          handleClick && handleClick();\n          resetForm();\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    children: function children(formik) {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(styles.wrapper),\n          children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              avatar: data.avatar,\n              name: data.name,\n              size: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css(styles.block),\n              children: /*#__PURE__*/_jsxDEV(FormikControl, {\n                control: \"textarea\",\n                name: \"text\",\n                label: \"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: css(styles.iconNoAvatar),\n              icon: faOptinMonster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css(styles.block),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\u041F\\u0440\\u0438\\u0432\\u0456\\u0442! \\u0429\\u043E\\u0431 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0443\\u0432\\u0430\\u0442\\u0438, \\u043F\\u043E\\u0442\\u0440\\u0456\\u0431\\u043D\\u043E \", /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/login\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: css(styles.link),\n                    children: \"\\u0443\\u0432\\u0456\\u0439\\u0442\\u0438\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 74\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 52\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css(loginStyles.inputSub, styles.submit, isFirstComment ? styles.submitPosition : null),\n          children: [isFirstComment || /*#__PURE__*/_jsxDEV(ButtonLink, {\n            nameBtn: \"\\u0421\\u043A\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\",\n            handleClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 31\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            nameBtn: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0443\\u0432\\u0430\\u0442\\u0438\",\n            isSubmitting: !data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(CreateComment, \"mSZyjHZxnwPfI2/xyFArnFSc2QU=\", false, function () {\n  return [useSelector, useMutation, useMutation];\n});\n\n_c = CreateComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Comments/Containers/CreateComment.tsx"],"names":["React","Link","useSelector","Formik","Form","useMutation","css","FontAwesomeIcon","faOptinMonster","Yup","Avatar","Button","ButtonLink","FormikControl","loginStyles","styles","CreateCommentMutation","AddCommentMutation","commentsQuery","CreateComment","postId","idComment","isFirstComment","handleClick","state","user","data","createComment","addComment","initialValues","text","validationSchema","object","string","min","required","onSubmit","values","resetForm","ref","query","variables","idAuthor","userId","_id","refetchQueries","then","formik","wrapper","avatar","name","block","iconNoAvatar","link","inputSub","submit","submitPosition"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport Link from \"next/link\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Formik, Form } from 'formik'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { css } from \"aphrodite/no-important\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faOptinMonster } from \"@fortawesome/free-brands-svg-icons\"\r\nimport * as Yup from 'yup'\r\nimport { Avatar, Button, ButtonLink, FormikControl } from \"../../../Components\"\r\nimport loginStyles from '../../../styles/login'\r\nimport styles from '../Components/styles'\r\nimport { CreateCommentMutation, AddCommentMutation } from './mutations'\r\nimport { commentsQuery } from \"./querys\"\r\nimport { User } from \"../../../types/user\"\r\ntype CreateCommentProps = {\r\n  postId: string\r\n  idComment?: string\r\n  isFirstComment: boolean\r\n  handleClick?: () => void\r\n}\r\n\r\nexport const CreateComment: React.FC<CreateCommentProps> = ({ postId, idComment, isFirstComment, handleClick }): any => {\r\n  const { data } = useSelector((state: { user: User }) => state.user)\r\n  const [ createComment ] = useMutation(CreateCommentMutation)\r\n  const [ addComment ] = useMutation(AddCommentMutation)\r\n  const initialValues = { text: '' }\r\n  const validationSchema = Yup.object({\r\n    text: Yup.string()\r\n      .min(3, 'Короткий коментар')\r\n      .required('Required')\r\n  })\r\n  const onSubmit = (values, { resetForm }) => {\r\n    const ref = [{\r\n      query: commentsQuery,\r\n      variables: { postId: postId }\r\n    }]\r\n    const query = {\r\n      variables: {\r\n        idAuthor: data.userId,\r\n        _id: idComment,\r\n        postId: postId,\r\n        text: values.text\r\n      },\r\n      refetchQueries: ref\r\n    }\r\n    if (isFirstComment) {\r\n      createComment(query).then(data => {\r\n        if (data) {\r\n          resetForm()\r\n        }\r\n      })\r\n    } else {\r\n      addComment(query).then(data => {\r\n        if (data) {\r\n          handleClick && handleClick()\r\n          resetForm()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return <Formik initialValues={ initialValues } onSubmit={ onSubmit } validationSchema={ validationSchema } >\r\n    {formik => {\r\n      return <Form>\r\n        <div className={ css(styles.wrapper) }>\r\n          {data ? <>\r\n            <Avatar avatar={ data.avatar } name={ data.name } size='S' />\r\n            <div className={ css(styles.block) }>\r\n              <FormikControl control='textarea' name='text' label='Ваш коментар...' />\r\n            </div>\r\n          </> :<>\r\n            <FontAwesomeIcon className={ css(styles.iconNoAvatar) } icon={ faOptinMonster } />\r\n            <div className={ css(styles.block) }>\r\n              <p>Привіт! Щоб коментувати, потрібно <Link href={\"/login\"}><a className={ css(styles.link) }>увійти</a></Link></p>\r\n            </div>\r\n          </>}\r\n        </div>\r\n        <div className={ css(loginStyles.inputSub, styles.submit, isFirstComment ? styles.submitPosition : null) }>\r\n          { isFirstComment || <ButtonLink nameBtn='Скасувати' handleClick={ handleClick } /> }\r\n          <Button type=\"submit\" nameBtn='Коментувати' isSubmitting={ !data } />\r\n        </div>\r\n      </Form>\r\n    }}\r\n  </Formik>\r\n}"]},"metadata":{},"sourceType":"module"}