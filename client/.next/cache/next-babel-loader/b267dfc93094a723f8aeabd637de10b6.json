{"ast":null,"code":"import _slicedToArray from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Like } from '../Components/Like';\nimport { addLikeMutation, removeLikeMutation } from './mutations';\nimport { modalActions } from \"../../../redux/actions\";\nexport var Likes = function Likes(_ref) {\n  var id = _ref.id,\n      likes = _ref.likes,\n      post = _ref.post;\n\n  var _useState = useState(likes.length),\n      quantityLikes = _useState[0],\n      setQuantityLikes = _useState[1];\n\n  var _useState2 = useState(false),\n      userLike = _useState2[0],\n      setUserLike = _useState2[1];\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useDispatch();\n  var data = user.data;\n  var userId = data ? data.userId : undefined;\n  useEffect(function () {\n    likes.filter(function (item) {\n      if (item === userId) {\n        setUserLike(true);\n      } else {\n        setUserLike(false);\n      }\n    });\n  }, [likes, userId]);\n\n  var _useMutation = useMutation(addLikeMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addLike = _useMutation2[0];\n\n  var _useMutation3 = useMutation(removeLikeMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      removeLike = _useMutation4[0];\n\n  var handleChangeAdd = function handleChangeAdd() {\n    if (userId) {\n      setQuantityLikes(quantityLikes + 1);\n      setUserLike(true);\n      addLike({\n        variables: {\n          postId: id,\n          userId: userId\n        }\n      }).then(function (r) {\n        return r;\n      });\n    } else {\n      dispatch(modalActions.showModal('Для виконання данної дії потрібно авторизоватись'));\n    }\n  };\n\n  var handleChangeRemove = function handleChangeRemove() {\n    setQuantityLikes(quantityLikes - 1);\n    setUserLike(false);\n    removeLike({\n      variables: {\n        postId: id,\n        userId: userId\n      }\n    }).then(function (r) {\n      return r;\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Like, {\n    post: post,\n    quantityLikes: quantityLikes,\n    userLike: userLike,\n    handleChangeAdd: handleChangeAdd,\n    handleChangeRemove: handleChangeRemove\n  });\n};","map":null,"metadata":{},"sourceType":"module"}