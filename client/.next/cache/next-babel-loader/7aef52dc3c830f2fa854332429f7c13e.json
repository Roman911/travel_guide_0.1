{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\Components\\\\Button\\\\Button.tsx\";\nimport React from \"react\";\nimport { css } from 'aphrodite/no-important';\nimport styles from \"./styles\";\nexport const Button = ({\n  type,\n  nameBtn,\n  handleClick,\n  isSubmitting,\n  action\n}) => {\n  const btnStyle = isSubmitting ? css(styles.btn, styles.btnGray) : css(styles.btn);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    onClick: () => handleClick ? handleClick(action) : void 0,\n    className: btnStyle,\n    children: nameBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/Components/Button/Button.tsx"],"names":["React","css","styles","Button","type","nameBtn","handleClick","isSubmitting","action","btnStyle","btn","btnGray"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAUA,OAAO,MAAMC,MAA+B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,WAAjB;AAA8BC,EAAAA,YAA9B;AAA4CC,EAAAA;AAA5C,CAAD,KAA0D;AACvG,QAAMC,QAAQ,GAAGF,YAAY,GAAGN,GAAG,CAACC,MAAM,CAACQ,GAAR,EAAaR,MAAM,CAACS,OAApB,CAAN,GAAqCV,GAAG,CAACC,MAAM,CAACQ,GAAR,CAArE;AACA,sBAAO;AAAQ,IAAA,IAAI,EAAGN,IAAf;AAAsB,IAAA,OAAO,EAAG,MAAME,WAAW,GAAGA,WAAW,CAACE,MAAD,CAAd,GAAmC,KAAK,CAAzF;AAA8F,IAAA,SAAS,EAAGC,QAA1G;AAAA,cACHJ;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CALM","sourcesContent":["import React from \"react\"\r\nimport { css } from 'aphrodite/no-important'\r\nimport styles from \"./styles\"\r\n\r\ntype MyButtonProps = {\r\n  type?: \"button\" | \"submit\" | \"reset\"\r\n  nameBtn: string\r\n  handleClick?: (arg: string) => void\r\n  isSubmitting: boolean\r\n  action?: string | undefined\r\n}\r\n\r\nexport const Button: React.FC<MyButtonProps> = ({ type, nameBtn, handleClick, isSubmitting, action }) => {\r\n  const btnStyle = isSubmitting ? css(styles.btn, styles.btnGray) : css(styles.btn)\r\n  return <button type={ type } onClick={ () => handleClick ? handleClick(action as string) : void(0) } className={ btnStyle }>\r\n    { nameBtn }\r\n  </button>\r\n}"]},"metadata":{},"sourceType":"module"}