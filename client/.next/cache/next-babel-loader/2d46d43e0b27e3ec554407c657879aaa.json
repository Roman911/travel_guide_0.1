{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  showSidebar: null,\n  isOpen: null\n};\n\nconst sidebar = (state = initialState, actions) => {\n  switch (actions.type) {\n    case 'SHOW_SIDEBAR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showSidebar: true\n      });\n\n    case 'HIDE_SIDEBAR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showSidebar: null,\n        isOpen: null\n      });\n\n    case 'CLOSE_SIDEBAR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isOpen: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default sidebar;","map":{"version":3,"sources":["D:/web/travel_guide/client/redux/reducers/sidebar.ts"],"names":["initialState","showSidebar","isOpen","sidebar","state","actions","type"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,OAAvB,KAA+C;AAC7D,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAK,cAAL;AACE,6CACKF,KADL;AAEEH,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAK,cAAL;AACE,6CACKG,KADL;AAEEH,QAAAA,WAAW,EAAE,IAFf;AAGEC,QAAAA,MAAM,EAAE;AAHV;;AAKF,SAAK,eAAL;AACE,6CACKE,KADL;AAEEF,QAAAA,MAAM,EAAE;AAFV;;AAIF;AACE,aAAOE,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n  showSidebar: null,\r\n  isOpen: null\r\n};\r\n\r\ntype ActionType = {\r\n  type: string\r\n}\r\n\r\nconst sidebar = (state = initialState, actions: ActionType) => {\r\n  switch (actions.type) {\r\n    case 'SHOW_SIDEBAR':\r\n      return {\r\n        ...state,\r\n        showSidebar: true\r\n      };\r\n    case 'HIDE_SIDEBAR':\r\n      return {\r\n        ...state,\r\n        showSidebar: null,\r\n        isOpen: null\r\n      };\r\n    case 'CLOSE_SIDEBAR':\r\n      return {\r\n        ...state,\r\n        isOpen: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default sidebar"]},"metadata":{},"sourceType":"module"}