{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\Containers\\\\Location\\\\Location.tsx\";\nimport React from \"react\";\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { locationQuery } from \"./querys\";\nimport { Loading, VisualContent } from \"../../Components\";\nimport { addLocationsUserListMutation } from \"../../modules/InformUserLocation/Containers/mutations\";\nimport { removeLocationWithUserListMutation } from './mutations';\nexport const Location = ({\n  _id,\n  locationId,\n  nameSection,\n  handleClick\n}) => {\n  const [addLocationsUserList] = useMutation(addLocationsUserListMutation);\n  const [removeLocationWithUserList] = useMutation(removeLocationWithUserListMutation);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(locationQuery, {\n    variables: {\n      _id: locationId\n    }\n  });\n\n  const updateLocationMyList = () => {\n    addLocationsUserList({\n      variables: {\n        _id: _id,\n        action: 'visited'\n      }\n    }).then(data => {\n      if (data) {\n        handleClick('wantToVisit');\n      }\n    });\n  };\n\n  const removeLocation = () => {\n    removeLocationWithUserList({\n      variables: {\n        _id: _id\n      }\n    }).then(data => {\n      if (data) {\n        handleClick(nameSection);\n      }\n    });\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  if (error) return `Error! ${error}`;\n  const {\n    location\n  } = data;\n  return /*#__PURE__*/_jsxDEV(VisualContent, {\n    location: location,\n    nameSection: nameSection,\n    updateLocationMyList: updateLocationMyList,\n    removeLocation: removeLocation\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/Containers/Location/Location.tsx"],"names":["React","useMutation","useQuery","locationQuery","Loading","VisualContent","addLocationsUserListMutation","removeLocationWithUserListMutation","Location","_id","locationId","nameSection","handleClick","addLocationsUserList","removeLocationWithUserList","loading","error","data","variables","updateLocationMyList","action","then","removeLocation","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,kBAAvC;AACA,SAASC,4BAAT,QAA6C,uDAA7C;AACA,SAASC,kCAAT,QAAmD,aAAnD;AASA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA;AAAhC,CAAD,KAAwD;AACvG,QAAM,CAAEC,oBAAF,IAA2BZ,WAAW,CAACK,4BAAD,CAA5C;AACA,QAAM,CAAEQ,0BAAF,IAAiCb,WAAW,CAACM,kCAAD,CAAlD;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CAACC,aAAD,EAAgB;AACvDe,IAAAA,SAAS,EAAE;AACTT,MAAAA,GAAG,EAAEC;AADI;AAD4C,GAAhB,CAAzC;;AAKA,QAAMS,oBAAoB,GAAG,MAAM;AACjCN,IAAAA,oBAAoB,CAAC;AACnBK,MAAAA,SAAS,EAAE;AACTT,QAAAA,GAAG,EAAEA,GADI;AAETW,QAAAA,MAAM,EAAE;AAFC;AADQ,KAAD,CAApB,CAKGC,IALH,CAKQJ,IAAI,IAAI;AACd,UAAIA,IAAJ,EAAU;AACRL,QAAAA,WAAW,CAAC,aAAD,CAAX;AACD;AACF,KATD;AAUD,GAXD;;AAYA,QAAMU,cAAc,GAAG,MAAM;AAC3BR,IAAAA,0BAA0B,CAAC;AACzBI,MAAAA,SAAS,EAAE;AACTT,QAAAA,GAAG,EAAEA;AADI;AADc,KAAD,CAA1B,CAIGY,IAJH,CAIQJ,IAAI,IAAI;AACd,UAAIA,IAAJ,EAAU;AACRL,QAAAA,WAAW,CAACD,WAAD,CAAX;AACD;AACF,KARD;AASD,GAVD;;AAWA,MAAII,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AACX,QAAM;AAAEO,IAAAA;AAAF,MAAeN,IAArB;AAEA,sBAAO,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAGM,QAA1B;AAAqC,IAAA,WAAW,EAAGZ,WAAnD;AAAiE,IAAA,oBAAoB,EAAGQ,oBAAxF;AAA+G,IAAA,cAAc,EAAGG;AAAhI;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApCM","sourcesContent":["import React from \"react\"\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { locationQuery } from \"./querys\"\r\nimport { Loading, VisualContent } from \"../../Components\"\r\nimport { addLocationsUserListMutation } from \"../../modules/InformUserLocation/Containers/mutations\"\r\nimport { removeLocationWithUserListMutation } from './mutations'\r\n\r\ntype LocationProps = {\r\n  _id: string\r\n  locationId: string\r\n  nameSection: string\r\n  handleClick: (arg: string) => void\r\n}\r\n\r\nexport const Location: React.FC<LocationProps> = ({ _id, locationId, nameSection, handleClick }): any => {\r\n  const [ addLocationsUserList ] = useMutation(addLocationsUserListMutation)\r\n  const [ removeLocationWithUserList ] = useMutation(removeLocationWithUserListMutation)\r\n  const { loading, error, data } = useQuery(locationQuery, {\r\n    variables: {\r\n      _id: locationId\r\n    }\r\n  })\r\n  const updateLocationMyList = () => {\r\n    addLocationsUserList({\r\n      variables: {\r\n        _id: _id,\r\n        action: 'visited'\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        handleClick('wantToVisit')\r\n      }\r\n    })\r\n  }\r\n  const removeLocation = () => {\r\n    removeLocationWithUserList({\r\n      variables: {\r\n        _id: _id\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        handleClick(nameSection)\r\n      }\r\n    })\r\n  }\r\n  if (loading) return <Loading />\r\n  if (error) return `Error! ${error}`\r\n  const { location } = data\r\n\r\n  return <VisualContent location={ location } nameSection={ nameSection } updateLocationMyList={ updateLocationMyList } removeLocation={ removeLocation } />\r\n}"]},"metadata":{},"sourceType":"module"}