{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\GoogleMaps\\\\Components\\\\MarkersMap.tsx\";\nimport React from \"react\";\nimport { Marker } from '@react-google-maps/api';\nexport const MarkersMap = ({\n  rest\n}) => {\n  const {\n    locations,\n    setSelectedPark\n  } = rest.options;\n  console.log(rest);\n  return locations.map((park, index) => {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      onClick: () => {\n        setSelectedPark(park._id);\n      },\n      position: {\n        lat: Number(park.coordinates[0]),\n        lng: Number(park.coordinates[1])\n      },\n      icon: {\n        url: `http://326b53d9806dcac09833-a590b81c812a57d0f4b1c3b1d1b7a9ea.r50.cf3.rackcdn.com/markersIcon/${park.isType}.png`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  });\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/GoogleMaps/Components/MarkersMap.tsx"],"names":["React","Marker","MarkersMap","rest","locations","setSelectedPark","options","console","log","map","park","index","_id","lat","Number","coordinates","lng","url","isType"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAMA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACtE,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCF,IAAI,CAACG,OAA5C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,SAAOC,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,wBAAO,QAAC,MAAD;AAEL,MAAA,OAAO,EAAE,MAAM;AACbN,QAAAA,eAAe,CAACK,IAAI,CAACE,GAAN,CAAf;AACD,OAJI;AAKL,MAAA,QAAQ,EAAE;AAACC,QAAAA,GAAG,EAAEC,MAAM,CAACJ,IAAI,CAACK,WAAL,CAAiB,CAAjB,CAAD,CAAZ;AAAmCC,QAAAA,GAAG,EAAEF,MAAM,CAACJ,IAAI,CAACK,WAAL,CAAiB,CAAjB,CAAD;AAA9C,OALL;AAML,MAAA,IAAI,EAAE;AACJE,QAAAA,GAAG,EAAG,gGAA+FP,IAAI,CAACQ,MAAO;AAD7G;AAND,OACCP,KADD;AAAA;AAAA;AAAA;AAAA,YAAP;AAUD,GAXM,CAAP;AAYD,CAjBM","sourcesContent":["import React from \"react\"\r\nimport { Marker } from '@react-google-maps/api'\r\n\r\ntype MarkersMapProps = {\r\n  rest: any\r\n}\r\n\r\nexport const MarkersMap: React.FC<MarkersMapProps> = ({ rest }): any => {\r\n  const { locations, setSelectedPark } = rest.options\r\n\r\n  console.log(rest)\r\n\r\n  return locations.map((park, index) => {\r\n    return <Marker\r\n      key={ index }\r\n      onClick={() => {\r\n        setSelectedPark(park._id )\r\n      }}\r\n      position={{lat: Number(park.coordinates[0]), lng: Number(park.coordinates[1])}}\r\n      icon={{\r\n        url: `http://326b53d9806dcac09833-a590b81c812a57d0f4b1c3b1d1b7a9ea.r50.cf3.rackcdn.com/markersIcon/${park.isType}.png`\r\n      }}\r\n    />\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}