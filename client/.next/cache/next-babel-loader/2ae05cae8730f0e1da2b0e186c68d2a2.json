{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport { Loading } from \"../../Components\";\nimport { LocationInformation } from \"../../modules\";\nimport { Search } from \"./Search\";\nvar libraries = [\"places\"];\nexport var GoogleMaps = function GoogleMaps(_ref) {\n  var mapContainerStyle = _ref.mapContainerStyle,\n      center = _ref.center,\n      zoom = _ref.zoom,\n      locations = _ref.locations,\n      disableDefaultUI = _ref.disableDefaultUI,\n      click = _ref.click,\n      search = _ref.search,\n      isType = _ref.isType;\n\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: process.env.GOOGLE_MAPS_KAY,\n    // @ts-ignore\n    libraries: libraries\n  }),\n      isLoaded = _useLoadScript.isLoaded,\n      loadError = _useLoadScript.loadError;\n\n  var _useState = useState(false),\n      searchMarker = _useState[0],\n      setSearchMarker = _useState[1];\n\n  var mapRef = useRef();\n  var onMapLoad = useCallback(function (map) {\n    mapRef.current = map;\n  }, []);\n  var panTo = useCallback(function (_ref2) {\n    var lat = _ref2.lat,\n        lng = _ref2.lng;\n    // @ts-ignore\n    mapRef.current.panTo({\n      lat: lat,\n      lng: lng\n    }); // @ts-ignore\n\n    mapRef.current.setZoom(12);\n    setSearchMarker(true);\n  }, []);\n\n  var _useState2 = useState(null),\n      marker = _useState2[0],\n      setMarker = _useState2[1];\n\n  var _useState3 = useState(null),\n      selectedPark = _useState3[0],\n      setSelectedPark = _useState3[1];\n\n  var _useState4 = useState(false),\n      closeWindow = _useState4[0],\n      setCloseWindow = _useState4[1];\n\n  var handleClick = useCallback(function () {\n    setCloseWindow(true);\n    setTimeout(function () {\n      setSelectedPark(null);\n      setCloseWindow(false);\n    }, 700);\n  }, []);\n  var options = {\n    disableDefaultUI: disableDefaultUI\n  };\n\n  var renderMap = function renderMap() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        position: 'relative',\n        width: '100%'\n      },\n      children: [console.log(center, zoom), search && /*#__PURE__*/_jsx(Search, {\n        panTo: panTo\n      }), /*#__PURE__*/_jsxs(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        zoom: zoom,\n        center: center,\n        options: options,\n        onLoad: onMapLoad,\n        onClick: click ? function (event) {\n          click(event);\n          setMarker({\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          });\n        } : null,\n        children: [selectedPark && /*#__PURE__*/_jsx(LocationInformation, {\n          _id: selectedPark,\n          handleClick: handleClick,\n          closeWindow: closeWindow\n        }), locations && locations.map(function (park, index) {\n          return /*#__PURE__*/_jsx(Marker, {\n            onClick: function onClick() {\n              setSelectedPark(park._id);\n            },\n            position: {\n              lat: Number(park.coordinates[0]),\n              lng: Number(park.coordinates[1])\n            },\n            icon: {\n              url: \"http://326b53d9806dcac09833-a590b81c812a57d0f4b1c3b1d1b7a9ea.r50.cf3.rackcdn.com/markersIcon/\".concat(park.isType, \".png\")\n            }\n          }, index);\n        }), marker && /*#__PURE__*/_jsx(Marker, {\n          position: {\n            lat: marker.lat,\n            lng: marker.lng\n          },\n          icon: isType !== 'other' ? {\n            url: \"http://326b53d9806dcac09833-a590b81c812a57d0f4b1c3b1d1b7a9ea.r50.cf3.rackcdn.com/markersIcon/\".concat(isType, \".png\")\n          } : null\n        }), searchMarker && /*#__PURE__*/_jsx(Marker, {\n          position: center\n        })]\n      })]\n    });\n  };\n\n  if (loadError) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      children: \"\\u041D\\u0435\\u043C\\u043E\\u0436\\u043B\\u0438\\u0432\\u043E \\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0438\\u0442\\u0438 \\u043A\\u0430\\u0440\\u0442\\u0443\"\n    });\n  }\n\n  return isLoaded ? renderMap() : /*#__PURE__*/_jsx(Loading, {});\n};","map":null,"metadata":{},"sourceType":"module"}