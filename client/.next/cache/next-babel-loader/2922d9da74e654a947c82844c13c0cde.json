{"ast":null,"code":"import _regeneratorRuntime from \"D:/web/travel_guide/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Search\\\\Containers\\\\Search.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport searchStyles from '../../../styles/search';\nimport { css } from \"aphrodite/no-important\";\nexport var Search = function Search(_ref) {\n  _s();\n\n  var panTo = _ref.panTo;\n\n  var _usePlacesAutocomplet = usePlacesAutocomplete({\n    requestOptions: {\n      // @ts-ignore\n      location: {\n        lat: function lat() {\n          return 49.026151;\n        },\n        lng: function lng() {\n          return 31.483070;\n        }\n      },\n      radius: 50 * 1000\n    }\n  }),\n      ready = _usePlacesAutocomplet.ready,\n      value = _usePlacesAutocomplet.value,\n      _usePlacesAutocomplet2 = _usePlacesAutocomplet.suggestions,\n      status = _usePlacesAutocomplet2.status,\n      data = _usePlacesAutocomplet2.data,\n      setValue = _usePlacesAutocomplet.setValue,\n      clearSuggestions = _usePlacesAutocomplet.clearSuggestions;\n\n  var _useFormik = useFormik({\n    initialValues: {\n      description: ''\n    },\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var results, _yield$getLatLng, lat, lng;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setValue(values.description, false);\n                clearSuggestions();\n                _context.prev = 2;\n                _context.next = 5;\n                return getGeocode({\n                  address: values.description\n                });\n\n              case 5:\n                results = _context.sent;\n                _context.next = 8;\n                return getLatLng(results[0]);\n\n              case 8:\n                _yield$getLatLng = _context.sent;\n                lat = _yield$getLatLng.lat;\n                lng = _yield$getLatLng.lng;\n                panTo({\n                  lat: lat,\n                  lng: lng\n                });\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 14]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }),\n      handleSubmit = _useFormik.handleSubmit,\n      handleChange = _useFormik.handleChange,\n      handleBlur = _useFormik.handleBlur;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(searchStyles.wrapper),\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onClick: handleSubmit,\n      className: css(searchStyles.form),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: css(searchStyles.input),\n        type: \"text\",\n        value: value,\n        onChange: function onChange(e) {\n          setValue(e.target.value);\n        },\n        disabled: !ready,\n        placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A \\u043D\\u0430 Google \\u041A\\u0430\\u0440\\u0442\\u0430\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, _this), data.length !== 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: css(searchStyles.select),\n        size: data.length,\n        id: \"description\",\n        name: \"description\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        children: status === 'OK' && data.map(function (value, index) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            className: css(searchStyles.option),\n            value: value.description,\n            children: value.description\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Search, \"vAhIoqi63SlStwJqd7nUEOU9Fxc=\", false, function () {\n  return [usePlacesAutocomplete, useFormik];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Search/Containers/Search.tsx"],"names":["React","useFormik","usePlacesAutocomplete","getGeocode","getLatLng","searchStyles","css","Search","panTo","requestOptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","initialValues","description","onSubmit","values","address","results","console","log","handleSubmit","handleChange","handleBlur","wrapper","form","input","e","target","length","select","map","index","option"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { useFormik } from \"formik\"\r\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete'\r\nimport searchStyles from '../../../styles/search'\r\nimport { css } from \"aphrodite/no-important\"\r\n\r\nexport const Search = ({ panTo }) => {\r\n  const { ready, value, suggestions: { status, data }, setValue, clearSuggestions } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      // @ts-ignore\r\n      location: { lat: () => 49.026151, lng: () => 31.483070 },\r\n      radius: 50 * 1000\r\n    },\r\n  })\r\n  const { handleSubmit, handleChange, handleBlur } = useFormik({\r\n    initialValues: {\r\n      description: ''\r\n    },\r\n    onSubmit: async (values) => {\r\n      setValue(values.description, false)\r\n      clearSuggestions()\r\n      try {\r\n        const results = await getGeocode({ address: values.description })\r\n        const { lat, lng } = await getLatLng(results[0])\r\n        panTo({ lat, lng })\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n  })\r\n  return <div className={ css(searchStyles.wrapper) }>\r\n    <form onClick={ handleSubmit } className={ css(searchStyles.form) }>\r\n      <input\r\n        className={ css(searchStyles.input) }\r\n        type=\"text\"\r\n        value={ value }\r\n        onChange={ (e) => {\r\n          setValue(e.target.value)\r\n        }}\r\n        disabled={!ready}\r\n        placeholder='Пошук на Google Картах'\r\n      />\r\n      { data.length !== 0 ? <select className={ css(searchStyles.select) } size={ data.length } id='description' name='description' onChange={ handleChange } onBlur={ handleBlur }>\r\n        { status === 'OK' && data.map((value, index) => {\r\n          return <option className={ css(searchStyles.option) } key={index} value={value.description}>{value.description}</option>\r\n        }) }\r\n      </select> : null }\r\n    </form>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}