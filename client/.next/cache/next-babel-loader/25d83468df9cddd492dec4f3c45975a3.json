{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\InformUserLocation\\\\Containers\\\\InformUserLocation.tsx\";\nimport React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { InformLocation } from \"../Components/InformLocation\";\nimport { modalActions } from \"../../../redux/actions\";\nimport { locationUserQuery } from './querys';\nimport { addLocationsUserListMutation } from \"./mutations\";\nimport { Loading } from \"../../../Components\";\nexport const InformUserLocation = ({\n  user,\n  locationId\n}) => {\n  const dispatch = useDispatch();\n  const [addLocationsUserList] = useMutation(addLocationsUserListMutation);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(locationUserQuery, {\n    variables: {\n      userId: user.data.userId,\n      locationId: locationId\n    }\n  });\n\n  const addLocationMyList = action => {\n    const {\n      locationUser\n    } = data;\n    const variables = {\n      userId: user.data.userId,\n      locationId: locationId,\n      action: action\n    };\n    locationUser && (variables._id = locationUser._id);\n    addLocationsUserList({\n      variables: variables,\n      refetchQueries: [{\n        query: locationUserQuery,\n        variables: {\n          userId: user.data.userId,\n          locationId: locationId\n        }\n      }]\n    }).then(data => {\n      if (data) {\n        dispatch(modalActions.showModal('Локація успішно добавлена у ваш список'));\n      }\n    });\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (error) return `Error! ${error}`;\n  const {\n    locationUser\n  } = data;\n  return /*#__PURE__*/_jsxDEV(InformLocation, {\n    addLocationMyList: addLocationMyList,\n    locationUser: locationUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/InformUserLocation/Containers/InformUserLocation.tsx"],"names":["React","useDispatch","useQuery","useMutation","InformLocation","modalActions","locationUserQuery","addLocationsUserListMutation","Loading","InformUserLocation","user","locationId","dispatch","addLocationsUserList","loading","error","data","variables","userId","addLocationMyList","action","locationUser","_id","refetchQueries","query","then","showModal"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,SAASC,iBAAT,QAAkC,UAAlC;AACA,SAASC,4BAAT,QAA6C,aAA7C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAOA,OAAO,MAAMC,kBAAqD,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA+B;AAClG,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAAEY,oBAAF,IAA2BV,WAAW,CAACI,4BAAD,CAA5C;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bd,QAAQ,CAACI,iBAAD,EAAoB;AAC3DW,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAER,IAAI,CAACM,IAAL,CAAUE,MADT;AAETP,MAAAA,UAAU,EAAEA;AAFH;AADgD,GAApB,CAAzC;;AAMA,QAAMQ,iBAAiB,GAAIC,MAAD,IAAoB;AAC5C,UAAM;AAAEC,MAAAA;AAAF,QAAmBL,IAAzB;AACA,UAAMC,SAA+E,GAAG;AACtFC,MAAAA,MAAM,EAAER,IAAI,CAACM,IAAL,CAAUE,MADoE;AAEtFP,MAAAA,UAAU,EAAEA,UAF0E;AAGtFS,MAAAA,MAAM,EAAEA;AAH8E,KAAxF;AAKAC,IAAAA,YAAY,KAAKJ,SAAS,CAACK,GAAV,GAAgBD,YAAY,CAACC,GAAlC,CAAZ;AACAT,IAAAA,oBAAoB,CAAC;AACnBI,MAAAA,SAAS,EAAEA,SADQ;AAEnBM,MAAAA,cAAc,EAAE,CAAC;AACfC,QAAAA,KAAK,EAAElB,iBADQ;AAEfW,QAAAA,SAAS,EAAE;AACTC,UAAAA,MAAM,EAAER,IAAI,CAACM,IAAL,CAAUE,MADT;AAETP,UAAAA,UAAU,EAAEA;AAFH;AAFI,OAAD;AAFG,KAAD,CAApB,CASGc,IATH,CASQT,IAAI,IAAI;AACd,UAAIA,IAAJ,EAAU;AACRJ,QAAAA,QAAQ,CAACP,YAAY,CAACqB,SAAb,CAAuB,wCAAvB,CAAD,CAAR;AACD;AACF,KAbD;AAcD,GAtBD;;AAuBA,MAAIZ,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AACX,QAAM;AAAEM,IAAAA;AAAF,MAAmBL,IAAzB;AAEA,sBAAO,QAAC,cAAD;AAAgB,IAAA,iBAAiB,EAAGG,iBAApC;AAAwD,IAAA,YAAY,EAAGE;AAAvE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArCM","sourcesContent":["import React from \"react\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { InformLocation } from \"../Components/InformLocation\"\r\nimport { modalActions } from \"../../../redux/actions\"\r\nimport { User } from \"../../../types/user\"\r\nimport { locationUserQuery } from './querys'\r\nimport { addLocationsUserListMutation } from \"./mutations\"\r\nimport { Loading } from \"../../../Components\"\r\n\r\ntype InformUserLocationProps = {\r\n  user: User\r\n  locationId: string\r\n}\r\n\r\nexport const InformUserLocation: React.FC<InformUserLocationProps> = ({ user, locationId }): any => {\r\n  const dispatch = useDispatch()\r\n  const [ addLocationsUserList ] = useMutation(addLocationsUserListMutation)\r\n  const { loading, error, data } = useQuery(locationUserQuery, {\r\n    variables: {\r\n      userId: user.data.userId,\r\n      locationId: locationId\r\n    }\r\n  })\r\n  const addLocationMyList = (action: string) => {\r\n    const { locationUser } = data\r\n    const variables: { userId: string, locationId: string, action: string, _id?: string } = {\r\n      userId: user.data.userId,\r\n      locationId: locationId,\r\n      action: action\r\n    }\r\n    locationUser && (variables._id = locationUser._id)\r\n    addLocationsUserList({\r\n      variables: variables,\r\n      refetchQueries: [{\r\n        query: locationUserQuery,\r\n        variables: {\r\n          userId: user.data.userId,\r\n          locationId: locationId\r\n        }\r\n      }]\r\n    }).then(data => {\r\n      if (data) {\r\n        dispatch(modalActions.showModal('Локація успішно добавлена у ваш список'))\r\n      }\r\n    })\r\n  }\r\n  if (loading) return <Loading />\r\n  if (error) return `Error! ${error}`\r\n  const { locationUser } = data\r\n\r\n  return <InformLocation addLocationMyList={ addLocationMyList } locationUser={ locationUser } />\r\n}"]},"metadata":{},"sourceType":"module"}