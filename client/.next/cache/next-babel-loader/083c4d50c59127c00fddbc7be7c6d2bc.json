{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { locationQuery } from \"./querys\";\nimport { Loading, VisualContent } from \"../../Components\";\nimport { addLocationsUserListMutation } from \"../../modules/InformUserLocation/Containers/mutations\";\nimport { removeLocationWithUserListMutation } from './mutations';\nexport const Location = ({\n  _id,\n  locationId,\n  nameSection,\n  handleClick\n}) => {\n  const [addLocationsUserList] = useMutation(addLocationsUserListMutation);\n  const [removeLocationWithUserList] = useMutation(removeLocationWithUserListMutation);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(locationQuery, {\n    variables: {\n      _id: locationId\n    }\n  });\n\n  const updateLocationMyList = () => {\n    addLocationsUserList({\n      variables: {\n        _id: _id,\n        action: 'visited'\n      }\n    }).then(data => {\n      if (data) {\n        handleClick('wantToVisit');\n      }\n    });\n  };\n\n  const removeLocation = () => {\n    removeLocationWithUserList({\n      variables: {\n        _id: _id\n      }\n    }).then(data => {\n      if (data) {\n        handleClick(nameSection);\n      }\n    });\n  };\n\n  if (loading) return /*#__PURE__*/_jsx(Loading, {});\n  if (error) return `Error! ${error}`;\n  const {\n    location\n  } = data;\n  return /*#__PURE__*/_jsx(VisualContent, {\n    location: location,\n    nameSection: nameSection,\n    updateLocationMyList: updateLocationMyList,\n    removeLocation: removeLocation\n  });\n};","map":null,"metadata":{},"sourceType":"module"}