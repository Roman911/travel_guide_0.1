{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\pages\\\\profile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { locationsUserQuery } from '../apollo/queries/locationsUser';\nimport { Loading, MainLayout, ProfileMain } from \"../Components\";\nimport withApollo from \"../lib/withApollo\";\n\nvar Profile = function Profile() {\n  _s();\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var userId = user ? user.data.userId : 'jhgjhgjh';\n  console.log(user);\n\n  var _useState = useState('wantToVisit'),\n      nameSection = _useState[0],\n      setNameSection = _useState[1];\n\n  var _useQuery = useQuery(locationsUserQuery, {\n    variables: {\n      userId: userId,\n      action: 'wantToVisit'\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, _this);\n  if (error) return \"Error! \".concat(error);\n  var locationsUserList = data.locationsUserList;\n\n  var handleClick = function handleClick(action) {\n    setNameSection(action);\n    refetch({\n      userId: user.data.userId,\n      action: action\n    }).then(function (r) {\n      return r;\n    });\n  };\n\n  return user.data && /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: \"Profile\",\n    children: /*#__PURE__*/_jsxDEV(ProfileMain, {\n      handleClick: handleClick,\n      data: user.data,\n      nameSection: nameSection,\n      locationsUserList: locationsUserList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Profile, \"UZ5fHCCnhEXNiH9uJNv6JcTxffc=\", false, function () {\n  return [useSelector, useQuery];\n});\n\n_c = Profile;\nexport default _c2 = withApollo(Profile);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/web/travel_guide/client/pages/profile.tsx"],"names":["React","useState","useSelector","useQuery","locationsUserQuery","Loading","MainLayout","ProfileMain","withApollo","Profile","user","state","userId","data","console","log","nameSection","setNameSection","variables","action","loading","error","refetch","locationsUserList","handleClick","then","r"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B,QAAiD,eAAjD;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAGA,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAW;AAAA;;AACnC,MAAMC,IAAI,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA,WAA2BA,KAAK,CAACD,IAAjC;AAAA,GAAD,CAAxB;AACA,MAAME,MAAM,GAAGF,IAAI,GAAGA,IAAI,CAACG,IAAL,CAAUD,MAAb,GAAsB,UAAzC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAHmC,kBAIKT,QAAQ,CAAC,aAAD,CAJb;AAAA,MAI3Be,WAJ2B;AAAA,MAIdC,cAJc;;AAAA,kBAKOd,QAAQ,CAACC,kBAAD,EAAqB;AACrEc,IAAAA,SAAS,EAAE;AACTN,MAAAA,MAAM,EAAEA,MADC;AAETO,MAAAA,MAAM,EAAE;AAFC;AAD0D,GAArB,CALf;AAAA,MAK3BC,OAL2B,aAK3BA,OAL2B;AAAA,MAKlBC,KALkB,aAKlBA,KALkB;AAAA,MAKXR,IALW,aAKXA,IALW;AAAA,MAKLS,OALK,aAKLA,OALK;;AAWnC,MAAIF,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AAZwB,MAa3BE,iBAb2B,GAaLV,IAbK,CAa3BU,iBAb2B;;AAenC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,MAAD,EAAoB;AACtCF,IAAAA,cAAc,CAACE,MAAD,CAAd;AACAG,IAAAA,OAAO,CAAC;AACNV,MAAAA,MAAM,EAAEF,IAAI,CAACG,IAAL,CAAUD,MADZ;AAENO,MAAAA,MAAM,EAAEA;AAFF,KAAD,CAAP,CAGGM,IAHH,CAGQ,UAAAC,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAHT;AAID,GAND;;AAOA,SAAOhB,IAAI,CAACG,IAAL,iBACL,QAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAGW,WAA3B;AAAyC,MAAA,IAAI,EAAGd,IAAI,CAACG,IAArD;AAA4D,MAAA,WAAW,EAAGG,WAA1E;AAAwF,MAAA,iBAAiB,EAAGO;AAA5G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAID,CA1BD;;GAAMd,O;UACSP,W,EAI6BC,Q;;;KALtCM,O;AA4BN,qBAAeD,UAAU,CAACC,OAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { locationsUserQuery } from '../apollo/queries/locationsUser'\r\nimport { Loading, MainLayout, ProfileMain } from \"../Components\"\r\nimport withApollo from \"../lib/withApollo\"\r\nimport { User } from '../types/user'\r\n\r\nconst Profile: React.FC = (): any => {\r\n  const user = useSelector((state: { user: User }) => state.user)\r\n  const userId = user ? user.data.userId : 'jhgjhgjh'\r\n  console.log(user)\r\n  const [ nameSection, setNameSection ] = useState('wantToVisit')\r\n  const { loading, error, data, refetch } = useQuery(locationsUserQuery, {\r\n    variables: {\r\n      userId: userId,\r\n      action: 'wantToVisit'\r\n    }\r\n  })\r\n  if (loading) return <Loading />\r\n  if (error) return `Error! ${error}`\r\n  const { locationsUserList } = data\r\n\r\n  const handleClick = (action: string) => {\r\n    setNameSection(action)\r\n    refetch({\r\n      userId: user.data.userId,\r\n      action: action\r\n    }).then(r => r)\r\n  }\r\n  return user.data &&\r\n    <MainLayout title='Profile'>\r\n      <ProfileMain handleClick={ handleClick } data={ user.data } nameSection={ nameSection } locationsUserList={ locationsUserList } />\r\n    </MainLayout>\r\n}\r\n\r\nexport default withApollo(Profile)"]},"metadata":{},"sourceType":"module"}