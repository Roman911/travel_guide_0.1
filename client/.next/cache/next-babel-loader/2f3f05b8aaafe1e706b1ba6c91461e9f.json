{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Post\\\\Components\\\\Post.tsx\";\nimport React, { useState } from \"react\";\nimport Image from \"next/image\";\nimport { InView } from 'react-intersection-observer';\nimport { css } from \"aphrodite\";\nimport { Comments, InformUserLocation, Likes, Populars } from \"../../\";\nimport { ArticleStats, AuthorPost, InfoBar } from \"../../../Components\";\nimport baseStyles from '../../../styles';\nimport styles from './styles';\nexport const Post = ({\n  user,\n  post\n}) => {\n  const {\n    data\n  } = user;\n  const {\n    _id,\n    title,\n    small_text,\n    cover,\n    views,\n    likes,\n    author,\n    createdAt,\n    coordinates,\n    tickets,\n    location,\n    work_time,\n    isType,\n    editor,\n    locationId\n  } = post;\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n  console.log(inView);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(baseStyles.flexVFS, styles.wrapperL),\n    children: [/*#__PURE__*/_jsxDEV(InView, {\n      as: \"div\",\n      onChange: setInView,\n      className: css(styles.wrapper, baseStyles.boxShadow),\n      children: [/*#__PURE__*/_jsxDEV(AuthorPost, {\n        isArticle: true,\n        author: author,\n        date: createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: css(styles.title),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css(styles.text),\n        children: small_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        className: css(styles.img),\n        src: `/assets/uploads${cover}`,\n        layout: \"intrinsic\",\n        alt: title,\n        width: 980,\n        height: 450\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editorWrapper\",\n        dangerouslySetInnerHTML: {\n          __html: editor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css(baseStyles.flexSB, baseStyles.block, baseStyles.bottom),\n        children: [/*#__PURE__*/_jsxDEV(ArticleStats, {\n          isArticle: true,\n          views: views,\n          comments: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Likes, {\n          id: _id,\n          likes: likes,\n          post: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), ({\n        ref,\n        inView\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"ghghhghhhg\", inView.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        id: _id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        coordinates: coordinates,\n        tickets: tickets,\n        location: location,\n        work_time: work_time,\n        isType: isType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), data && /*#__PURE__*/_jsxDEV(InformUserLocation, {\n        locationId: locationId,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Populars, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Post/Components/Post.tsx"],"names":["React","useState","Image","InView","css","Comments","InformUserLocation","Likes","Populars","ArticleStats","AuthorPost","InfoBar","baseStyles","styles","Post","user","post","data","_id","title","small_text","cover","views","likes","author","createdAt","coordinates","tickets","location","work_time","isType","editor","locationId","inView","setInView","console","log","flexVFS","wrapperL","wrapper","boxShadow","text","img","__html","flexSB","block","bottom","ref","toString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport Image from \"next/image\"\r\nimport { InView } from 'react-intersection-observer'\r\nimport { css } from \"aphrodite\"\r\nimport { Comments, InformUserLocation, Likes, Populars } from \"../../\"\r\nimport { ArticleStats, AuthorPost, InfoBar } from \"../../../Components\"\r\nimport baseStyles from '../../../styles'\r\nimport styles from './styles'\r\nimport { PostData } from '../../../types/post'\r\nimport { User } from \"../../../types/user\"\r\ntype MyPostProps = {\r\n  post: PostData\r\n  user: User\r\n}\r\n\r\nexport const Post: React.FC<MyPostProps> = ({ user, post }) => {\r\n  const { data } = user\r\n  const { _id, title, small_text, cover, views, likes, author, createdAt, coordinates, tickets, location, work_time, isType, editor, locationId } = post\r\n\r\n  const [inView, setInView] = useState(false)\r\n\r\n  console.log(inView)\r\n\r\n  return <div className={ css(baseStyles.flexVFS, styles.wrapperL) }>\r\n    <InView as='div' onChange={ setInView } className={css(styles.wrapper, baseStyles.boxShadow)}>\r\n      <AuthorPost isArticle={ true } author={ author } date={ createdAt }/>\r\n      <h2 className={css(styles.title)}>{title}</h2>\r\n      <p className={ css(styles.text) }>{small_text}</p>\r\n      <Image className={ css(styles.img) } src={ `/assets/uploads${ cover }` } layout='intrinsic' alt={ title } width={980} height={450} />\r\n      <div className='editorWrapper' dangerouslySetInnerHTML={{__html: editor}}/>\r\n      <div className={css(baseStyles.flexSB, baseStyles.block, baseStyles.bottom)}>\r\n        <ArticleStats isArticle={ true } views={ views } comments={[]} />\r\n        <Likes id={ _id } likes={ likes } post={ true } />\r\n      </div>\r\n      {({ ref, inView }) => (\r\n        <div ref={ ref }>\r\n          <h1>ghghhghhhg{ inView.toString() }</h1>\r\n        </div>\r\n      )}\r\n      <Comments id={ _id } />\r\n    </InView>\r\n    <div>\r\n      <InfoBar coordinates={ coordinates } tickets={ tickets } location={ location } work_time={ work_time } isType={ isType } />\r\n      { data && <InformUserLocation locationId={ locationId } user={ user } /> }\r\n      <Populars />\r\n    </div>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}