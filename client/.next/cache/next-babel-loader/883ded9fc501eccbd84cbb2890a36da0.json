{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\pages\\\\profile.tsx\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { locationsUserQuery } from '../apollo/queries/locationsUser';\nimport { Loading, MainLayout, ProfileMain } from \"../Components\";\nimport withApollo from \"../lib/withApollo\";\nimport { useRouter } from \"next/router\";\n\nfunction Redirect(_ref) {\n  _s();\n\n  var to = _ref.to;\n  var router = useRouter();\n  useEffect(function () {\n    router.push(to).then();\n  }, [to]);\n  return null;\n}\n\n_s(Redirect, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Redirect;\n\nvar Profile = function Profile() {\n  _s2();\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n\n  if (!user.data) {\n    console.log(user.data);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, _this);\n  }\n\n  var _useState = useState('wantToVisit'),\n      nameSection = _useState[0],\n      setNameSection = _useState[1];\n\n  var _useQuery = useQuery(locationsUserQuery, {\n    variables: {\n      userId: user.data.userId,\n      action: 'wantToVisit'\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, _this);\n  if (error) return \"Error! \".concat(error);\n  var locationsUserList = data.locationsUserList;\n\n  var handleClick = function handleClick(action) {\n    setNameSection(action);\n    refetch({\n      userId: user.data.userId,\n      action: action\n    }).then(function (r) {\n      return r;\n    });\n  };\n\n  return user.data && /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: \"Profile\",\n    children: /*#__PURE__*/_jsxDEV(ProfileMain, {\n      handleClick: handleClick,\n      data: user.data,\n      nameSection: nameSection,\n      locationsUserList: locationsUserList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(Profile, \"UZ5fHCCnhEXNiH9uJNv6JcTxffc=\", false, function () {\n  return [useSelector, useQuery];\n});\n\n_c2 = Profile;\nexport default _c3 = withApollo(Profile);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Redirect\");\n$RefreshReg$(_c2, \"Profile\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["D:/web/travel_guide/client/pages/profile.tsx"],"names":["React","useEffect","useState","useSelector","useQuery","locationsUserQuery","Loading","MainLayout","ProfileMain","withApollo","useRouter","Redirect","to","router","push","then","Profile","user","state","data","console","log","nameSection","setNameSection","variables","userId","action","loading","error","refetch","locationsUserList","handleClick","r"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B,QAAiD,eAAjD;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAGA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,SAASC,QAAT,OAA0B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;AACxB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,MAAM,CAACC,IAAP,CAAYF,EAAZ,EAAgBG,IAAhB;AACD,GAFQ,EAEN,CAACH,EAAD,CAFM,CAAT;AAIA,SAAO,IAAP;AACD;;GARQD,Q;UACQD,S;;;KADRC,Q;;AAUT,IAAMK,OAAiB,GAAG,SAApBA,OAAoB,GAAW;AAAA;;AACnC,MAAMC,IAAI,GAAGd,WAAW,CAAC,UAACe,KAAD;AAAA,WAA2BA,KAAK,CAACD,IAAjC;AAAA,GAAD,CAAxB;;AACA,MAAI,CAACA,IAAI,CAACE,IAAV,EAAgB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AALkC,kBAMKjB,QAAQ,CAAC,aAAD,CANb;AAAA,MAM3BoB,WAN2B;AAAA,MAMdC,cANc;;AAAA,kBAOOnB,QAAQ,CAACC,kBAAD,EAAqB;AACrEmB,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAER,IAAI,CAACE,IAAL,CAAUM,MADT;AAETC,MAAAA,MAAM,EAAE;AAFC;AAD0D,GAArB,CAPf;AAAA,MAO3BC,OAP2B,aAO3BA,OAP2B;AAAA,MAOlBC,KAPkB,aAOlBA,KAPkB;AAAA,MAOXT,IAPW,aAOXA,IAPW;AAAA,MAOLU,OAPK,aAOLA,OAPK;;AAanC,MAAIF,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AAdwB,MAe3BE,iBAf2B,GAeLX,IAfK,CAe3BW,iBAf2B;;AAiBnC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,MAAD,EAAoB;AACtCH,IAAAA,cAAc,CAACG,MAAD,CAAd;AACAG,IAAAA,OAAO,CAAC;AACNJ,MAAAA,MAAM,EAAER,IAAI,CAACE,IAAL,CAAUM,MADZ;AAENC,MAAAA,MAAM,EAAEA;AAFF,KAAD,CAAP,CAGGX,IAHH,CAGQ,UAAAiB,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAHT;AAID,GAND;;AAOA,SAAOf,IAAI,CAACE,IAAL,iBACL,QAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAGY,WAA3B;AAAyC,MAAA,IAAI,EAAGd,IAAI,CAACE,IAArD;AAA4D,MAAA,WAAW,EAAGG,WAA1E;AAAwF,MAAA,iBAAiB,EAAGQ;AAA5G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAID,CA5BD;;IAAMd,O;UACSb,W,EAM6BC,Q;;;MAPtCY,O;AA8BN,qBAAeP,UAAU,CAACO,OAAD,CAAzB","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { locationsUserQuery } from '../apollo/queries/locationsUser'\r\nimport { Loading, MainLayout, ProfileMain } from \"../Components\"\r\nimport withApollo from \"../lib/withApollo\"\r\nimport { User } from '../types/user'\r\nimport {useRedirect} from \"../hooks/useRedirect\"\r\nimport {useRouter} from \"next/router\";\r\n\r\nfunction Redirect({ to }) {\r\n  const router = useRouter()\r\n\r\n  useEffect(() => {\r\n    router.push(to).then()\r\n  }, [to])\r\n\r\n  return null\r\n}\r\n\r\nconst Profile: React.FC = (): any => {\r\n  const user = useSelector((state: { user: User }) => state.user)\r\n  if (!user.data) {\r\n    console.log(user.data)\r\n    return <Redirect to={ '/login' } />\r\n  }\r\n  const [ nameSection, setNameSection ] = useState('wantToVisit')\r\n  const { loading, error, data, refetch } = useQuery(locationsUserQuery, {\r\n    variables: {\r\n      userId: user.data.userId,\r\n      action: 'wantToVisit'\r\n    }\r\n  })\r\n  if (loading) return <Loading />\r\n  if (error) return `Error! ${error}`\r\n  const { locationsUserList } = data\r\n\r\n  const handleClick = (action: string) => {\r\n    setNameSection(action)\r\n    refetch({\r\n      userId: user.data.userId,\r\n      action: action\r\n    }).then(r => r)\r\n  }\r\n  return user.data &&\r\n    <MainLayout title='Profile'>\r\n      <ProfileMain handleClick={ handleClick } data={ user.data } nameSection={ nameSection } locationsUserList={ locationsUserList } />\r\n    </MainLayout>\r\n}\r\n\r\nexport default withApollo(Profile)"]},"metadata":{},"sourceType":"module"}