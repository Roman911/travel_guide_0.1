{"ast":null,"code":"const validate = props => {\n  const {\n    values,\n    errors\n  } = props;\n  const rules = {\n    name: value => {\n      if (!value) {\n        errors.name = 'Required';\n      } else if (!/^(?=.*[a-z])/.test(value)) {\n        errors.name = \"Некоректне ім'я\";\n      }\n    },\n    email: value => {\n      if (!value) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        errors.email = 'Некоректний емейл';\n      }\n    },\n    password: value => {\n      if (!value) {\n        errors.password = 'Required';\n      } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/.test(value)) {\n        errors.password = 'Некоректний пароль';\n      }\n    },\n    password2: value => {\n      if (!value) {\n        errors.password2 = 'Required';\n      } else if (values.password !== value) {\n        errors.password2 = 'Некоректний пароль';\n      }\n    }\n  };\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\n};\n\nexport default validate;","map":{"version":3,"sources":["D:/web/travel_guide/client/utils/validate.ts"],"names":["validate","props","values","errors","rules","name","value","test","email","password","password2","Object","keys","forEach","key"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,KAAD,IAAgB;AAC/B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBF,KAA3B;AACA,QAAMG,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAGC,KAAD,IAAmB;AACvB,UAAI,CAACA,KAAL,EAAY;AACVH,QAAAA,MAAM,CAACE,IAAP,GAAc,UAAd;AACD,OAFD,MAEO,IAAI,CAAC,eAAeE,IAAf,CAAoBD,KAApB,CAAL,EAAiC;AACtCH,QAAAA,MAAM,CAACE,IAAP,GAAc,iBAAd;AACD;AACF,KAPW;AAQZG,IAAAA,KAAK,EAAGF,KAAD,IAAmB;AACxB,UAAI,CAACA,KAAL,EAAY;AACVH,QAAAA,MAAM,CAACK,KAAP,GAAe,UAAf;AACD,OAFD,MAEO,IACL,CAAC,4CAA4CD,IAA5C,CACCD,KADD,CADI,EAIL;AACAH,QAAAA,MAAM,CAACK,KAAP,GAAe,mBAAf;AACD;AACF,KAlBW;AAmBZC,IAAAA,QAAQ,EAAGH,KAAD,IAAmB;AAC3B,UAAI,CAACA,KAAL,EAAY;AACVH,QAAAA,MAAM,CAACM,QAAP,GAAkB,UAAlB;AACD,OAFD,MAEO,IAAI,CAAC,qCAAqCF,IAArC,CAA0CD,KAA1C,CAAL,EAAuD;AAC5DH,QAAAA,MAAM,CAACM,QAAP,GAAkB,oBAAlB;AACD;AACF,KAzBW;AA0BZC,IAAAA,SAAS,EAAGJ,KAAD,IAAgB;AACzB,UAAI,CAACA,KAAL,EAAY;AACVH,QAAAA,MAAM,CAACO,SAAP,GAAmB,UAAnB;AACD,OAFD,MAEO,IAAIR,MAAM,CAACO,QAAP,KAAoBH,KAAxB,EAA+B;AACpCH,QAAAA,MAAM,CAACO,SAAP,GAAmB,oBAAnB;AACD;AACF;AAhCW,GAAd;AAkCAC,EAAAA,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,OAApB,CAA4BC,GAAG,IAAIV,KAAK,CAACU,GAAD,CAAL,IAAcV,KAAK,CAACU,GAAD,CAAL,CAAWZ,MAAM,CAACY,GAAD,CAAjB,CAAjD;AACD,CArCD;;AAuCA,eAAed,QAAf","sourcesContent":["const validate = (props: any) => {\r\n  const { values, errors } = props\r\n  const rules = {\r\n    name: (value: string) => {\r\n      if (!value) {\r\n        errors.name = 'Required';\r\n      } else if (!/^(?=.*[a-z])/.test(value)) {\r\n        errors.name = \"Некоректне ім'я\"\r\n      }\r\n    },\r\n    email: (value: string) => {\r\n      if (!value) {\r\n        errors.email = 'Required'\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(\r\n          value\r\n        )\r\n      ) {\r\n        errors.email = 'Некоректний емейл'\r\n      }\r\n    },\r\n    password: (value: string) => {\r\n      if (!value) {\r\n        errors.password = 'Required';\r\n      } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/.test(value)) {\r\n        errors.password = 'Некоректний пароль'\r\n      }\r\n    },\r\n    password2: (value: any) => {\r\n      if (!value) {\r\n        errors.password2 = 'Required'\r\n      } else if (values.password !== value) {\r\n        errors.password2 = 'Некоректний пароль'\r\n      }\r\n    }\r\n  }\r\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]))\r\n}\r\n\r\nexport default validate"]},"metadata":{},"sourceType":"module"}