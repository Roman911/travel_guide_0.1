{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\ModalSetting\\\\Containers\\\\ModalSetting.tsx\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Modal } from \"../Components/Modal\";\nimport { modalActions } from \"../../../redux/actions\";\nimport { addLocationsUserListMutation } from './mutations';\nexport const ModalSetting = ({\n  mapInformation\n}) => {\n  const {\n    data\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    0: showModalSetting,\n    1: setShowModalSetting\n  } = useState(false);\n  const {\n    0: closeModalSetting,\n    1: setCloseModalSetting\n  } = useState(false);\n  const [addLocationsUserList] = useMutation(addLocationsUserListMutation);\n\n  const handleClick = () => {\n    if (data) {\n      if (showModalSetting) {\n        setCloseModalSetting(true);\n        setTimeout(() => {\n          setCloseModalSetting(false);\n          setShowModalSetting(false);\n        }, 400);\n      } else {\n        setShowModalSetting(true);\n      }\n    } else {\n      dispatch(modalActions.showModal('Для виконання данної дії потрібно авторизоватись'));\n    }\n  };\n\n  const addLocationMyList = action => {\n    handleClick();\n    addLocationsUserList({\n      variables: {\n        userId: data.userId,\n        locationId: '5e8dd38b3e3a8b4608faf12d',\n        action: action\n      }\n    }).then(data => {\n      if (data) {\n        dispatch(modalActions.showModal('Локація успішно добавлена у ваш список'));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    mapInformation: mapInformation,\n    handleClick: handleClick,\n    showModalSetting: showModalSetting,\n    closeModalSetting: closeModalSetting,\n    addLocationMyList: addLocationMyList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/ModalSetting/Containers/ModalSetting.tsx"],"names":["React","useState","useSelector","useDispatch","useMutation","Modal","modalActions","addLocationsUserListMutation","ModalSetting","mapInformation","data","state","user","dispatch","showModalSetting","setShowModalSetting","closeModalSetting","setCloseModalSetting","addLocationsUserList","handleClick","setTimeout","showModal","addLocationMyList","action","variables","userId","locationId","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,4BAAT,QAA6C,aAA7C;AAOA,OAAO,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAC/E,QAAM;AAAEC,IAAAA;AAAF,MAAWR,WAAW,CAAES,KAAD,IAA2BA,KAAK,CAACC,IAAlC,CAA5B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAA,OAACW,gBAAD;AAAA,OAAmBC;AAAnB,MAA0Cd,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAAA,OAACe,iBAAD;AAAA,OAAoBC;AAApB,MAA4ChB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACiB,oBAAD,IAAyBd,WAAW,CAACG,4BAAD,CAA1C;;AACA,QAAMY,WAAW,GAAG,MAAM;AACxB,QAAIT,IAAJ,EAAU;AACR,UAAII,gBAAJ,EAAsB;AACpBG,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAG,QAAAA,UAAU,CAAC,MAAM;AACfH,UAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAF,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,SAHS,EAGP,GAHO,CAAV;AAID,OAND,MAMO;AACLA,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,KAVD,MAUO;AACLF,MAAAA,QAAQ,CAACP,YAAY,CAACe,SAAb,CAAuB,kDAAvB,CAAD,CAAR;AACD;AACF,GAdD;;AAeA,QAAMC,iBAAiB,GAAIC,MAAD,IAAoB;AAC5CJ,IAAAA,WAAW;AACXD,IAAAA,oBAAoB,CAAC;AACnBM,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAEf,IAAI,CAACe,MADJ;AAETC,QAAAA,UAAU,EAAE,0BAFH;AAGTH,QAAAA,MAAM,EAAEA;AAHC;AADQ,KAAD,CAApB,CAMGI,IANH,CAMQjB,IAAI,IAAI;AACd,UAAIA,IAAJ,EAAU;AACRG,QAAAA,QAAQ,CAACP,YAAY,CAACe,SAAb,CAAuB,wCAAvB,CAAD,CAAR;AACD;AACF,KAVD;AAWD,GAbD;;AAeA,sBAAO,QAAC,KAAD;AAAO,IAAA,cAAc,EAAGZ,cAAxB;AAAyC,IAAA,WAAW,EAAGU,WAAvD;AAAqE,IAAA,gBAAgB,EAAGL,gBAAxF;AAA2G,IAAA,iBAAiB,EAAGE,iBAA/H;AAAmJ,IAAA,iBAAiB,EAAGM;AAAvK;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArCM","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { Modal } from \"../Components/Modal\"\r\nimport { modalActions } from \"../../../redux/actions\"\r\nimport { addLocationsUserListMutation } from './mutations'\r\nimport { User } from \"../../../types/user\"\r\n\r\ntype ModalSettingProps = {\r\n  mapInformation?: boolean\r\n}\r\n\r\nexport const ModalSetting: React.FC<ModalSettingProps> = ({ mapInformation }) => {\r\n  const { data } = useSelector((state: { user: User }) => state.user)\r\n  const dispatch = useDispatch()\r\n  const [showModalSetting, setShowModalSetting] = useState(false)\r\n  const [closeModalSetting, setCloseModalSetting] = useState(false)\r\n  const [addLocationsUserList] = useMutation(addLocationsUserListMutation)\r\n  const handleClick = () => {\r\n    if (data) {\r\n      if (showModalSetting) {\r\n        setCloseModalSetting(true)\r\n        setTimeout(() => {\r\n          setCloseModalSetting(false)\r\n          setShowModalSetting(false)\r\n        }, 400)\r\n      } else {\r\n        setShowModalSetting(true)\r\n      }\r\n    } else {\r\n      dispatch(modalActions.showModal('Для виконання данної дії потрібно авторизоватись'))\r\n    }\r\n  }\r\n  const addLocationMyList = (action: string) => {\r\n    handleClick()\r\n    addLocationsUserList({\r\n      variables: {\r\n        userId: data.userId,\r\n        locationId: '5e8dd38b3e3a8b4608faf12d',\r\n        action: action\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        dispatch(modalActions.showModal('Локація успішно добавлена у ваш список'))\r\n      }\r\n    })\r\n  }\r\n\r\n  return <Modal mapInformation={ mapInformation } handleClick={ handleClick } showModalSetting={ showModalSetting } closeModalSetting={ closeModalSetting } addLocationMyList={ addLocationMyList } />\r\n}"]},"metadata":{},"sourceType":"module"}