{"ast":null,"code":"import _regeneratorRuntime from \"D:/web/travel_guide/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Post\\\\Containers\\\\Post.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useQuery } from \"@apollo/client\";\nimport { postQuery } from \"./query\";\nimport { LoadingPost } from \"../../../Components\";\nimport { Post } from '../Components/Post';\n\nvar PostShow = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var _id, user, _useQuery, loading, error, data, _yield$data, post;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _id = _ref._id;\n            user = useSelector(function (state) {\n              return state.user;\n            });\n            _useQuery = useQuery(postQuery, {\n              variables: {\n                _id: _id\n              }\n            }), loading = _useQuery.loading, error = _useQuery.error, data = _useQuery.data;\n\n            if (!loading) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(LoadingPost, {\n              isPost: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 23\n            }, _this));\n\n          case 6:\n            if (!error) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", \"Error! \".concat(error));\n\n          case 8:\n            _context.next = 10;\n            return data;\n\n          case 10:\n            _yield$data = _context.sent;\n            post = _yield$data.post;\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(Post, {\n              post: post,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 10\n            }, _this));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"xD0Emta5DDiW3sQcWauWE1XKFgs=\", false, function () {\n    return [useSelector, useQuery];\n  }));\n\n  return function PostShow(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n_c = PostShow;\nexport default PostShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostShow\");","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Post/Containers/Post.tsx"],"names":["React","useSelector","useQuery","postQuery","LoadingPost","Post","PostShow","_id","user","state","variables","loading","error","data","post"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAOA,IAAMC,QAAkD;AAAA;;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAASC,YAAAA,GAAT,QAASA,GAAT;AACnDC,YAAAA,IADmD,GAC5CP,WAAW,CAAC,UAACQ,KAAD;AAAA,qBAA2BA,KAAK,CAACD,IAAjC;AAAA,aAAD,CADiC;AAAA,wBAExBN,QAAQ,CAACC,SAAD,EAAY;AACnDO,cAAAA,SAAS,EAAE;AAAEH,gBAAAA,GAAG,EAAHA;AAAF;AADwC,aAAZ,CAFgB,EAEjDI,OAFiD,aAEjDA,OAFiD,EAExCC,KAFwC,aAExCA,KAFwC,EAEjCC,IAFiC,aAEjCA,IAFiC;;AAAA,iBAKrDF,OALqD;AAAA;AAAA;AAAA;;AAAA,0DAKrC,QAAC,WAAD;AAAa,cAAA,MAAM,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,qBALqC;;AAAA;AAAA,iBAMrDC,KANqD;AAAA;AAAA;AAAA;;AAAA,8DAM7BA,KAN6B;;AAAA;AAAA;AAAA,mBAOlCC,IAPkC;;AAAA;AAAA;AAOjDC,YAAAA,IAPiD,eAOjDA,IAPiD;AAAA,0DAQlD,QAAC,IAAD;AAAM,cAAA,IAAI,EAAGA,IAAb;AAAoB,cAAA,IAAI,EAAGN;AAA3B;AAAA;AAAA;AAAA;AAAA,qBARkD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YACzCP,WADyC,EAErBC,QAFqB;AAAA;;AAAA,kBAAlDI,QAAkD;AAAA;AAAA;AAAA,GAAxD;;KAAMA,Q;AAWN,eAAeA,QAAf","sourcesContent":["import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useQuery } from \"@apollo/client\"\r\nimport { postQuery } from \"./query\"\r\nimport { LoadingPost } from \"../../../Components\"\r\nimport { Post } from '../Components/Post'\r\nimport { User } from \"../../../types/user\"\r\n\r\ntype PostShowProps = {\r\n  _id: string\r\n}\r\n\r\nconst PostShow: ({ _id }: PostShowProps) => Promise<any> = async ({ _id }): Promise<any> => {\r\n  const user = useSelector((state: { user: User }) => state.user)\r\n  const { loading, error, data } = useQuery(postQuery, {\r\n    variables: { _id }\r\n  })\r\n  if (loading) return <LoadingPost isPost={ true } />\r\n  if (error) return `Error! ${error}`\r\n  const { post } = await data\r\n  return <Post post={ post } user={ user } />\r\n}\r\n\r\nexport default PostShow"]},"metadata":{},"sourceType":"module"}