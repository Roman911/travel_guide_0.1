{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\CreatePost\\\\Containers\\\\CreatePost.tsx\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { css } from \"aphrodite/no-important\";\nimport * as Yup from 'yup';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { addPostMutation } from \"../../../apollo/mutations/addPost\";\nimport { modalActions } from \"../../../redux/actions\";\nimport baseStyles from \"../../../styles\";\nimport styles from \"../Components/styles\";\nimport { CreatePostForm } from \"../Components/CreatePostForm\";\nexport const CreatePost = () => {\n  const dispatch = useDispatch();\n  const {\n    data\n  } = useSelector(state => state.user);\n  const [createPost] = useMutation(addPostMutation);\n  const initialValues = {\n    editor: '',\n    type_material: 'post',\n    title: '',\n    tickets: ['Дорослий: 50грн', 'Дитячий: 50грн', 'Студенський: 50грн', 'Пенсійний: 50грн'],\n    image_loader: '',\n    link: '',\n    tag: '',\n    price: '',\n    small_text: '',\n    coordinateY: '',\n    coordinateX: '',\n    location: '',\n    work_time: '',\n    adultTicket: '',\n    childTicket: '',\n    studentTicket: '',\n    pensionTicket: '',\n    text: '',\n    isPrice: ['free'],\n    how_to_get_there: ''\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string().min(5, 'Коротка назва').max(50, 'Дуже велика назва').required('Required')\n  });\n\n  const onSubmit = (values, onSubmitProps) => {\n    const tags = values.tag.split(' ');\n    const coordinates = [values.coordinateY, values.coordinateX];\n    const tickets = [];\n    values.adultTicket && tickets.push(`Дорослий: ${values.adultTicket} грн`);\n    values.childTicket && tickets.push(`Дитячий: ${values.childTicket} грн`);\n    values.studentTicket && tickets.push(`Студенський: ${values.studentTicket} грн`);\n    values.pensionTicket && tickets.push(`Пенсійний: ${values.pensionTicket} грн`);\n    const idAuthor = data ? data.userId : null;\n    createPost({\n      variables: {\n        postInput: {\n          idAuthor: idAuthor,\n          type_material: values.type_material,\n          title: values.title,\n          link: values.link,\n          tags: tags,\n          tickets: tickets,\n          small_text: values.small_text,\n          coordinates: coordinates,\n          location: values.location,\n          work_time: values.work_time,\n          editor: values.editor,\n          isPrice: values.isPrice,\n          how_to_get_there: values.how_to_get_there\n        }\n      }\n    }).then(data => {\n      if (data) {\n        dispatch(modalActions.showModal('Статю успішно створено!'));\n        onSubmitProps.resetForm();\n      }\n\n      onSubmitProps.setSubmitting(false);\n    }).catch(() => {\n      onSubmitProps.setSubmitting(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(baseStyles.boxShadow, styles.wrapper),\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: formik => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(CreatePostForm, {\n            formik: formik\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/CreatePost/Containers/CreatePost.tsx"],"names":["React","useDispatch","useSelector","Formik","Form","css","Yup","useMutation","addPostMutation","modalActions","baseStyles","styles","CreatePostForm","CreatePost","dispatch","data","state","user","createPost","initialValues","editor","type_material","title","tickets","image_loader","link","tag","price","small_text","coordinateY","coordinateX","location","work_time","adultTicket","childTicket","studentTicket","pensionTicket","text","isPrice","how_to_get_there","validationSchema","object","string","min","max","required","onSubmit","values","onSubmitProps","tags","split","coordinates","push","idAuthor","userId","variables","postInput","then","showModal","resetForm","setSubmitting","catch","boxShadow","wrapper","formik"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Formik, Form } from \"formik\"\r\nimport { css } from \"aphrodite/no-important\"\r\nimport * as Yup from 'yup'\r\nimport { useMutation } from \"@apollo/react-hooks\"\r\nimport { User } from \"../../../types/user\"\r\nimport { addPostMutation } from \"../../../apollo/mutations/addPost\"\r\nimport { modalActions } from \"../../../redux/actions\"\r\nimport baseStyles from \"../../../styles\"\r\nimport styles from \"../Components/styles\"\r\nimport { CreatePostForm } from \"../Components/CreatePostForm\"\r\n\r\nexport const CreatePost = () => {\r\n  const dispatch = useDispatch()\r\n  const { data } = useSelector((state: { user: User }) => state.user)\r\n  const [ createPost ] = useMutation(addPostMutation)\r\n  const initialValues = { editor: '', type_material: 'post', title: '', tickets: ['Дорослий: 50грн', 'Дитячий: 50грн', 'Студенський: 50грн', 'Пенсійний: 50грн'], image_loader: '', link: '', tag: '', price: '', small_text: '', coordinateY: '', coordinateX: '', location: '', work_time: '',  adultTicket: '', childTicket: '', studentTicket: '', pensionTicket: '', text: '', isPrice: ['free'], how_to_get_there: '' }\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string()\r\n      .min(5, 'Коротка назва')\r\n      .max(50, 'Дуже велика назва')\r\n      .required('Required')\r\n  })\r\n  const onSubmit = (values, onSubmitProps) => {\r\n    const tags = values.tag.split(' ')\r\n    const coordinates = [ values.coordinateY, values.coordinateX ]\r\n    const tickets = []\r\n    values.adultTicket && tickets.push(`Дорослий: ${ values.adultTicket } грн`)\r\n    values.childTicket && tickets.push(`Дитячий: ${ values.childTicket } грн`)\r\n    values.studentTicket && tickets.push(`Студенський: ${ values.studentTicket } грн`)\r\n    values.pensionTicket && tickets.push(`Пенсійний: ${ values.pensionTicket } грн`)\r\n    const idAuthor = data ? data.userId : null\r\n    createPost({\r\n      variables: {\r\n        postInput: {\r\n          idAuthor: idAuthor,\r\n          type_material: values.type_material,\r\n          title: values.title,\r\n          link: values.link,\r\n          tags: tags,\r\n          tickets: tickets,\r\n          small_text: values.small_text,\r\n          coordinates: coordinates,\r\n          location: values.location,\r\n          work_time: values.work_time,\r\n          editor: values.editor,\r\n          isPrice: values.isPrice,\r\n          how_to_get_there: values.how_to_get_there\r\n        }\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        dispatch(modalActions.showModal('Статю успішно створено!'))\r\n        onSubmitProps.resetForm()\r\n      }\r\n      onSubmitProps.setSubmitting(false)\r\n    }).catch( () => {\r\n      onSubmitProps.setSubmitting(false)\r\n    })\r\n  }\r\n  return <div className={css(baseStyles.boxShadow, styles.wrapper)}>\r\n    <Formik initialValues={ initialValues } onSubmit={ onSubmit } validationSchema={ validationSchema } >\r\n      {formik => {\r\n        return <Form >\r\n          <CreatePostForm formik={ formik } />\r\n        </Form>\r\n      }}\r\n    </Formik>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}