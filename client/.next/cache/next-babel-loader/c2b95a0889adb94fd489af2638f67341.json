{"ast":null,"code":"import _slicedToArray from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\pages\\\\registration.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Formik, Form } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport withApollo from \"../lib/withApollo\";\nimport { MainLayout, HeaderForm, AuthForm } from \"../Components\";\nimport { addUserMutation } from \"../apollo/mutations/addUser\";\nimport validateForm from '../utils/validate';\nimport { userActions, modalActions } from \"../redux/actions\";\n\nvar Registration = function Registration() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useMutation = useMutation(addUserMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createUse = _useMutation2[0];\n\n  var initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  };\n\n  var validate = function validate(values) {\n    var errors = {};\n    validateForm({\n      values: values,\n      errors: errors\n    });\n    return errors;\n  };\n\n  var onSubmit = function onSubmit(values, onSubmitProps) {\n    createUse({\n      variables: {\n        userInput: {\n          name: values.name,\n          email: values.email,\n          password: values.password\n        }\n      }\n    }).then(function (data) {\n      if (data) {\n        // @ts-ignore\n        dispatch(userActions.registerData(data));\n        dispatch(modalActions.showModal('Користувач успішно створений! Увійдіть в свій акаунт'));\n      }\n\n      onSubmitProps.setSubmitting(false);\n    })[\"catch\"](function (errors) {\n      if (errors) {\n        dispatch(modalActions.showModal('Користувач з таким емейлом зайнятий'));\n      }\n\n      onSubmitProps.setSubmitting(false);\n    });\n  };\n\n  var dataForm = [{\n    control: 'input',\n    id: 'name',\n    type: 'text',\n    label: 'Ведіть імя'\n  }, {\n    control: 'input',\n    id: 'email',\n    type: 'email',\n    label: 'Введіть email'\n  }, {\n    control: 'input',\n    id: 'password',\n    type: 'password',\n    label: 'Придумайте пароль'\n  }, {\n    control: 'input',\n    id: 'password2',\n    type: 'password',\n    label: 'Повторіть пароль'\n  }];\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: \"Registration\",\n    auth: true,\n    children: [/*#__PURE__*/_jsxDEV(HeaderForm, {\n      title: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\",\n      text: \"\\u0412\\u0436\\u0435 \\u0454 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\",\n      link: \"/login\",\n      btn: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validate: validate,\n      children: function children(formik) {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(AuthForm, {\n            formik: formik,\n            dataForm: dataForm,\n            btn: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Registration, \"LMYX7G9tpnsRkBiVt5b4u+Xde1s=\", false, function () {\n  return [useDispatch, useMutation];\n});\n\n_c = Registration;\nexport default _c2 = withApollo(Registration);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Registration\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/web/travel_guide/client/pages/registration.tsx"],"names":["React","useMutation","Formik","Form","useDispatch","withApollo","MainLayout","HeaderForm","AuthForm","addUserMutation","validateForm","userActions","modalActions","Registration","dispatch","createUse","initialValues","name","email","password","password2","validate","values","errors","onSubmit","onSubmitProps","variables","userInput","then","data","registerData","showModal","setSubmitting","dataForm","control","id","type","label","formik"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { useMutation } from \"@apollo/client\"\r\nimport {Formik, Form} from \"formik\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { css } from \"aphrodite/no-important\"\r\nimport withApollo from \"../lib/withApollo\"\r\nimport { MainLayout, HeaderForm, AuthForm } from \"../Components\"\r\nimport { addUserMutation } from \"../apollo/mutations/addUser\"\r\nimport validateForm from '../utils/validate'\r\nimport { userActions, modalActions } from \"../redux/actions\"\r\nimport loginStyles from '../styles/login'\r\n\r\nconst Registration: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [createUse] = useMutation(addUserMutation)\r\n  const initialValues = { name: '', email: '', password: '', password2: '' }\r\n  const validate = values => {\r\n    let errors = {}\r\n    validateForm({ values, errors })\r\n    return errors\r\n  }\r\n  const onSubmit = ( values, onSubmitProps ) => {\r\n    createUse({\r\n      variables: {\r\n        userInput: { name: values.name, email: values.email, password: values.password }\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        // @ts-ignore\r\n        dispatch(userActions.registerData(data))\r\n        dispatch(modalActions.showModal('Користувач успішно створений! Увійдіть в свій акаунт'))\r\n      }\r\n      onSubmitProps.setSubmitting(false)\r\n    }).catch((errors) => {\r\n      if (errors) {\r\n        dispatch(modalActions.showModal('Користувач з таким емейлом зайнятий'))\r\n      }\r\n      onSubmitProps.setSubmitting(false)\r\n    })\r\n  }\r\n  const dataForm = [\r\n    {\r\n      control: 'input',\r\n      id: 'name',\r\n      type: 'text',\r\n      label: 'Ведіть імя'\r\n    },\r\n    {\r\n      control: 'input',\r\n      id: 'email',\r\n      type: 'email',\r\n      label: 'Введіть email'\r\n    },\r\n    {\r\n      control: 'input',\r\n      id: 'password',\r\n      type: 'password',\r\n      label: 'Придумайте пароль'\r\n    },\r\n    {\r\n      control: 'input',\r\n      id: 'password2',\r\n      type: 'password',\r\n      label: 'Повторіть пароль'\r\n    }\r\n  ]\r\n  return <MainLayout title='Registration' auth={ true } >\r\n    <HeaderForm title='Реєстрація' text='Вже є акаунт?' link='/login' btn='Авторизуватися' />\r\n    <Formik initialValues={ initialValues } onSubmit={ onSubmit } validate={ validate }>\r\n      {formik => {\r\n        return <Form>\r\n          <AuthForm formik={ formik } dataForm={ dataForm } btn='Створити акаунт' />\r\n        </Form>\r\n      }}\r\n    </Formik>\r\n  </MainLayout>\r\n}\r\n\r\nexport default withApollo(Registration)"]},"metadata":{},"sourceType":"module"}