{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { css } from \"aphrodite/no-important\";\nimport * as Yup from 'yup';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { addPostMutation } from \"../../../apollo/mutations/addPost\";\nimport { modalActions } from \"../../../redux/actions\";\nimport baseStyles from \"../../../styles\";\nimport styles from \"../Components/styles\";\nimport { CreatePostForm } from \"../Components/CreatePostForm\";\nexport const CreatePost = () => {\n  const dispatch = useDispatch();\n  const {\n    data\n  } = useSelector(state => state.user);\n  const [createPost] = useMutation(addPostMutation);\n  const initialValues = {\n    editor: '',\n    type_material: 'post',\n    title: '',\n    tickets: ['Дорослий: 50грн', 'Дитячий: 50грн', 'Студенський: 50грн', 'Пенсійний: 50грн'],\n    image_loader: '',\n    link: '',\n    tag: '',\n    price: '',\n    small_text: '',\n    coordinateY: '',\n    coordinateX: '',\n    location: '',\n    work_time: '',\n    adultTicket: '',\n    childTicket: '',\n    studentTicket: '',\n    pensionTicket: '',\n    text: '',\n    isPrice: ['free'],\n    how_to_get_there: ''\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string().min(5, 'Коротка назва').max(50, 'Дуже велика назва').required('Required')\n  });\n\n  const onSubmit = (values, onSubmitProps) => {\n    const tags = values.tag.split(' ');\n    const coordinates = [values.coordinateY, values.coordinateX];\n    const idAuthor = data ? data.userId : null;\n    createPost({\n      variables: {\n        postInput: {\n          idAuthor: idAuthor,\n          type_material: values.type_material,\n          title: values.title,\n          link: values.link,\n          tags: tags,\n          tickets: values.tickets,\n          small_text: values.small_text,\n          coordinates: coordinates,\n          location: values.location,\n          work_time: values.work_time,\n          editor: values.editor,\n          isPrice: values.isPrice,\n          how_to_get_there: values.how_to_get_there\n        }\n      }\n    }).then(data => {\n      if (data) {\n        dispatch(modalActions.showModal('Статю успішно створено!'));\n        onSubmitProps.resetForm();\n      }\n\n      onSubmitProps.setSubmitting(false);\n    }).catch(() => {\n      onSubmitProps.setSubmitting(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: css(baseStyles.boxShadow, styles.wrapper),\n    children: /*#__PURE__*/_jsx(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: formik => {\n        return /*#__PURE__*/_jsx(Form, {\n          children: /*#__PURE__*/_jsx(CreatePostForm, {\n            formik: formik\n          })\n        });\n      }\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}