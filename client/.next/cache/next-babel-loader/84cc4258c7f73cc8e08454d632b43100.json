{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Search\\\\Components\\\\SearchPresent.tsx\";\nimport React from \"react\";\nimport { css } from \"aphrodite/no-important\";\nimport styles from './styles';\nexport const SearchPresent = ({\n  data,\n  formik,\n  value,\n  setValue,\n  ready,\n  status,\n  onSubmit\n}) => {\n  console.log(data, formik);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(styles.wrapper),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: css(styles.input),\n      type: \"text\",\n      value: value,\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      disabled: !ready\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), data.length !== 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n      className: css(styles.select),\n      size: data.length,\n      id: \"description\",\n      name: \"description\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      children: status === 'OK' && data.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          className: css(styles.option),\n          value: value.description,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: value.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 95\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Search/Components/SearchPresent.tsx"],"names":["React","css","styles","SearchPresent","data","formik","value","setValue","ready","status","onSubmit","console","log","wrapper","input","e","target","length","select","handleChange","handleBlur","map","index","option","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAYA,OAAO,MAAMC,aAA2C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA,MAAxC;AAAgDC,EAAAA;AAAhD,CAAD,KAAgE;AAEzHC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAAkBC,MAAlB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAGJ,GAAG,CAACC,MAAM,CAACW,OAAR,CAApB;AAAA,4BACL;AACE,MAAA,SAAS,EAAGZ,GAAG,CAACC,MAAM,CAACY,KAAR,CADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAGR,KAHV;AAIE,MAAA,QAAQ,EAAGS,CAAC,IAAI;AACdR,QAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AACD,OANH;AAOE,MAAA,QAAQ,EAAG,CAACE;AAPd;AAAA;AAAA;AAAA;AAAA,YADK,EAWHJ,IAAI,CAACa,MAAL,KAAgB,CAAhB,gBAAoB;AAAS,MAAA,SAAS,EAAGhB,GAAG,CAACC,MAAM,CAACgB,MAAR,CAAxB;AAA0C,MAAA,IAAI,EAAGd,IAAI,CAACa,MAAtD;AAA+D,MAAA,EAAE,EAAC,aAAlE;AAAgF,MAAA,IAAI,EAAC,aAArF;AAAmG,MAAA,QAAQ,EAAGZ,MAAM,CAACc,YAArH;AAAoI,MAAA,MAAM,EAAGd,MAAM,CAACe,UAApJ;AAAA,gBAClBX,MAAM,KAAK,IAAX,IAAmBL,IAAI,CAACiB,GAAL,CAAS,CAACf,KAAD,EAAQgB,KAAR,KAAkB;AAC9C,4BAAO;AAAQ,UAAA,SAAS,EAAGrB,GAAG,CAACC,MAAM,CAACqB,MAAR,CAAvB;AAAqD,UAAA,KAAK,EAAEjB,KAAK,CAACkB,WAAlE;AAAA,iCAA+E;AAAA,sBAASlB,KAAK,CAACkB;AAAf;AAAA;AAAA;AAAA;AAAA;AAA/E,WAA8CF,KAA9C;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFoB;AADD;AAAA;AAAA;AAAA;AAAA,YAApB,GAIU,IAfP;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBD,CArBM","sourcesContent":["import React from \"react\"\r\nimport { css } from \"aphrodite/no-important\"\r\nimport styles from './styles'\r\n\r\ntype SearchPresentProps = {\r\n  data: any\r\n  formik: any\r\n  value: string | undefined\r\n  setValue: any\r\n  ready: any\r\n  status: any\r\n  onSubmit: any\r\n}\r\n\r\nexport const SearchPresent: React.FC<SearchPresentProps> = ({ data, formik, value, setValue, ready, status, onSubmit }) => {\r\n\r\n  console.log(data, formik)\r\n\r\n  return <div className={ css(styles.wrapper) }>\r\n    <input\r\n      className={ css(styles.input) }\r\n      type=\"text\"\r\n      value={ value }\r\n      onChange={ e => {\r\n        setValue(e.target.value)\r\n      }}\r\n      disabled={ !ready }\r\n    />\r\n\r\n    { data.length !== 0 ? <select  className={ css(styles.select) } size={ data.length } id='description' name='description' onChange={ formik.handleChange } onBlur={ formik.handleBlur } >\r\n      { status === 'OK' && data.map((value, index) => {\r\n        return <option className={ css(styles.option) } key={index} value={value.description}><button>{value.description}</button></option>\r\n      }) }\r\n    </select> : null }\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}