{"ast":null,"code":"import _slicedToArray from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\CreateLocation\\\\Containers\\\\CreateLocationSelector.tsx\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormikContext, Formik, Form } from \"formik\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { css } from \"aphrodite/no-important\";\nimport * as Yup from 'yup';\nimport { addLocationMutation } from \"./mutations\";\nimport { modalActions } from '../../../redux/actions';\nimport baseStyle from '../../../styles';\nimport styles from '../Components/styles';\nimport { CreateLocation } from \"../Components/CreateLocation\";\nexport var CreateLocationSelector = function CreateLocationSelector(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var latLng = _ref.latLng,\n      isTypeSelect = _ref.isTypeSelect;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      data = _useSelector.data;\n\n  var _useMutation = useMutation(addLocationMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createLocations = _useMutation2[0];\n\n  var initialValues = {\n    title: '',\n    cover: '',\n    small_text: '',\n    linkToPost: '',\n    coordinateY: '0.00000',\n    coordinateX: '0.00000',\n    isType: 'other',\n    address: ['Київська обл.', 'м. Київ', 'вул. Хрещатик']\n  };\n  var validationSchema = Yup.object({\n    title: Yup.string().min(5, 'Коротка назва').max(50, 'Дуже велика назва').required('Required')\n  });\n\n  var onSubmit = function onSubmit(values, onSubmitProps) {\n    var coordinates = [values.coordinateY, values.coordinateX];\n    var idAuthor = data ? data.userId : null;\n    createLocations({\n      variables: {\n        locationsInput: {\n          idAuthor: idAuthor,\n          title: values.title,\n          cover: values.cover,\n          linkToPost: values.linkToPost,\n          small_text: values.small_text,\n          coordinates: coordinates,\n          isType: values.isType,\n          address: values.address\n        }\n      }\n    }).then(function (data) {\n      if (data) {\n        dispatch(modalActions.showModal('Локація успішно добавлена!'));\n        onSubmitProps.resetForm();\n      }\n\n      onSubmitProps.setSubmitting(false);\n    })[\"catch\"](function () {\n      onSubmitProps.setSubmitting(false);\n    });\n  };\n\n  var AutoRef = function AutoRef() {\n    _s();\n\n    var _useFormikContext = useFormikContext(),\n        values = _useFormikContext.values,\n        setFieldValue = _useFormikContext.setFieldValue;\n\n    useEffect(function () {\n      if (latLng) {\n        setFieldValue('coordinateY', String(latLng.coordinateY));\n        setFieldValue('coordinateX', String(latLng.coordinateX));\n      }\n    }, [latLng]);\n    useEffect(function () {\n      // @ts-ignore\n      isTypeSelect(values.isType); // @ts-ignore\n    }, [values.isType]);\n    return null;\n  };\n\n  _s(AutoRef, \"8mWcdOfKQmVIprh6ynV6ArIKKW0=\", false, function () {\n    return [useFormikContext];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(baseStyle.boxShadow, styles.wrapper),\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: function children(formik) {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(CreateLocation, {\n            formik: formik\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(AutoRef, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, _this);\n};\n\n_s2(CreateLocationSelector, \"Zq8J/QTuN9rq5JcwwplLj70VMsc=\", false, function () {\n  return [useDispatch, useSelector, useMutation];\n});\n\n_c = CreateLocationSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateLocationSelector\");","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/CreateLocation/Containers/CreateLocationSelector.tsx"],"names":["React","useEffect","useDispatch","useSelector","useFormikContext","Formik","Form","useMutation","css","Yup","addLocationMutation","modalActions","baseStyle","styles","CreateLocation","CreateLocationSelector","latLng","isTypeSelect","dispatch","state","user","data","createLocations","initialValues","title","cover","small_text","linkToPost","coordinateY","coordinateX","isType","address","validationSchema","object","string","min","max","required","onSubmit","values","onSubmitProps","coordinates","idAuthor","userId","variables","locationsInput","then","showModal","resetForm","setSubmitting","AutoRef","setFieldValue","String","boxShadow","wrapper","formik"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useFormikContext, Formik, Form } from \"formik\"\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { css } from \"aphrodite/no-important\"\r\nimport * as Yup from 'yup'\r\nimport { addLocationMutation } from \"./mutations\"\r\nimport { modalActions } from '../../../redux/actions'\r\nimport baseStyle from '../../../styles'\r\nimport styles from '../Components/styles'\r\nimport { User } from \"../../../types/user\"\r\nimport { CreateLocation } from \"../Components/CreateLocation\"\r\n\r\ntype clsProps = {\r\n  latLng: {\r\n    coordinateY: number,\r\n    coordinateX: number\r\n  } | null\r\n  isTypeSelect: ( arg: string ) => void\r\n}\r\n\r\nexport const CreateLocationSelector: React.FC<clsProps> = ({ latLng, isTypeSelect }): any => {\r\n  const dispatch = useDispatch()\r\n  const { data } = useSelector((state: { user: User }) => state.user)\r\n  const [ createLocations ] = useMutation(addLocationMutation)\r\n  const initialValues = { title: '', cover: '', small_text: '', linkToPost: '', coordinateY: '0.00000', coordinateX: '0.00000', isType: 'other', address: ['Київська обл.', 'м. Київ', 'вул. Хрещатик'] }\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string()\r\n      .min(5, 'Коротка назва')\r\n      .max(50, 'Дуже велика назва')\r\n      .required('Required')\r\n  })\r\n  const onSubmit = (values, onSubmitProps) => {\r\n    const coordinates = [ values.coordinateY, values.coordinateX ]\r\n    const idAuthor = data ? data.userId : null\r\n    createLocations({\r\n      variables: {\r\n        locationsInput: {\r\n          idAuthor: idAuthor,\r\n          title: values.title,\r\n          cover: values.cover,\r\n          linkToPost: values.linkToPost,\r\n          small_text: values.small_text,\r\n          coordinates: coordinates,\r\n          isType: values.isType,\r\n          address: values.address\r\n        }\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        dispatch(modalActions.showModal('Локація успішно добавлена!'))\r\n        onSubmitProps.resetForm()\r\n      }\r\n      onSubmitProps.setSubmitting(false)\r\n    }).catch( () => {\r\n      onSubmitProps.setSubmitting(false)\r\n    })\r\n  }\r\n  const AutoRef = () => {\r\n    const { values, setFieldValue } = useFormikContext()\r\n    useEffect(() => {\r\n      if (latLng) {\r\n        setFieldValue( 'coordinateY', String(latLng.coordinateY) )\r\n        setFieldValue( 'coordinateX', String(latLng.coordinateX) )\r\n      }\r\n    }, [latLng])\r\n    useEffect(() => {\r\n      // @ts-ignore\r\n      isTypeSelect(values.isType)\r\n      // @ts-ignore\r\n    }, [values.isType])\r\n    return null\r\n  }\r\n\r\n  return <div className={css(baseStyle.boxShadow, styles.wrapper)}>\r\n    <Formik initialValues={ initialValues } onSubmit={ onSubmit } validationSchema={ validationSchema }>\r\n      {formik => {\r\n        return <Form>\r\n          <CreateLocation formik={ formik } />\r\n          <AutoRef />\r\n        </Form>\r\n      }}\r\n    </Formik>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}