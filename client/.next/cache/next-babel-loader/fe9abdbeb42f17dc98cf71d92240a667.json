{"ast":null,"code":"import _slicedToArray from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { css } from \"aphrodite/no-important\";\nimport * as Yup from 'yup';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { addPostMutation } from \"../../../apollo/mutations/addPost\";\nimport { modalActions } from \"../../../redux/actions\";\nimport baseStyles from \"../../../styles\";\nimport styles from \"../Components/styles\";\nimport { CreatePostForm } from \"../Components/CreatePostForm\";\nexport default function CreatePost() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      data = _useSelector.data;\n\n  var _useMutation = useMutation(addPostMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createPost = _useMutation2[0];\n\n  var initialValues = {\n    editor: '',\n    type_material: 'post',\n    title: '',\n    image_loader: '',\n    link: '',\n    tag: '',\n    price: '',\n    small_text: '',\n    coordinateY: '',\n    coordinateX: '',\n    location: '',\n    work_time: '',\n    adultTicket: '',\n    childTicket: '',\n    studentTicket: '',\n    pensionTicket: '',\n    text: '',\n    isPrice: ['free'],\n    how_to_get_there: ''\n  };\n  var validationSchema = Yup.object({\n    title: Yup.string().min(5, 'Коротка назва').max(50, 'Дуже велика назва').required('Required')\n  });\n\n  var onSubmit = function onSubmit(values, onSubmitProps) {\n    var tags = values.tag.split(' ');\n    var coordinates = [values.coordinateY, values.coordinateX];\n    var tickets = [];\n    values.adultTicket && tickets.push(\"\\u0414\\u043E\\u0440\\u043E\\u0441\\u043B\\u0438\\u0439: \".concat(values.adultTicket, \" \\u0433\\u0440\\u043D\"));\n    values.childTicket && tickets.push(\"\\u0414\\u0438\\u0442\\u044F\\u0447\\u0438\\u0439: \".concat(values.childTicket, \" \\u0433\\u0440\\u043D\"));\n    values.studentTicket && tickets.push(\"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043D\\u0441\\u044C\\u043A\\u0438\\u0439: \".concat(values.studentTicket, \" \\u0433\\u0440\\u043D\"));\n    values.pensionTicket && tickets.push(\"\\u041F\\u0435\\u043D\\u0441\\u0456\\u0439\\u043D\\u0438\\u0439: \".concat(values.pensionTicket, \" \\u0433\\u0440\\u043D\"));\n    var idAuthor = data ? data.userId : null;\n    createPost({\n      variables: {\n        postInput: {\n          idAuthor: idAuthor,\n          type_material: values.type_material,\n          title: values.title,\n          link: values.link,\n          tags: tags,\n          tickets: tickets,\n          small_text: values.small_text,\n          coordinates: coordinates,\n          location: values.location,\n          work_time: values.work_time,\n          editor: values.editor,\n          isPrice: values.isPrice,\n          how_to_get_there: values.how_to_get_there\n        }\n      }\n    }).then(function (data) {\n      if (data) {\n        dispatch(modalActions.showModal('Статю успішно створено!'));\n        onSubmitProps.resetForm();\n      }\n\n      onSubmitProps.setSubmitting(false);\n    })[\"catch\"](function () {\n      onSubmitProps.setSubmitting(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: css(baseStyles.boxShadow, styles.wrapper),\n    children: /*#__PURE__*/_jsx(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: function children(formik) {\n        return /*#__PURE__*/_jsx(Form, {\n          children: /*#__PURE__*/_jsx(CreatePostForm, {\n            formik: formik\n          })\n        });\n      }\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}