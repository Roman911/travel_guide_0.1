{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Modal } from \"../Components/Modal\";\nimport { modalActions } from \"../../../redux/actions\";\nimport { addLocationsUserListMutation } from './mutations';\nexport const ModalSetting = ({\n  mapInformation\n}) => {\n  const {\n    data\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    0: showModalSetting,\n    1: setShowModalSetting\n  } = useState(false);\n  const {\n    0: closeModalSetting,\n    1: setCloseModalSetting\n  } = useState(false);\n  const [addLocationsUserList] = useMutation(addLocationsUserListMutation);\n\n  const handleClick = () => {\n    if (data) {\n      if (showModalSetting) {\n        setCloseModalSetting(true);\n        setTimeout(() => {\n          setCloseModalSetting(false);\n          setShowModalSetting(false);\n        }, 400);\n      } else {\n        setShowModalSetting(true);\n      }\n    } else {\n      dispatch(modalActions.showModal('Для виконання данної дії потрібно авторизоватись'));\n    }\n  };\n\n  const addLocationMyList = action => {\n    handleClick();\n    addLocationsUserList({\n      variables: {\n        userId: data.userId,\n        locationId: '5e8dd38b3e3a8b4608faf12d',\n        action: action\n      }\n    }).then(data => {\n      if (data) {\n        dispatch(modalActions.showModal('Локація успішно добавлена у ваш список'));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Modal, {\n    mapInformation: mapInformation,\n    handleClick: handleClick,\n    showModalSetting: showModalSetting,\n    closeModalSetting: closeModalSetting,\n    addLocationMyList: addLocationMyList\n  });\n};","map":null,"metadata":{},"sourceType":"module"}