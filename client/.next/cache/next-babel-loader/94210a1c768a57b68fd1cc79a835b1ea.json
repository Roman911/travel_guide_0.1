{"ast":null,"code":"import _slicedToArray from \"D:/web/travel_guide/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\Containers\\\\Location\\\\Location.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { locationQuery } from \"./querys\";\nimport { Loading, VisualContent } from \"../../Components\";\nimport { addLocationsUserListMutation } from \"../../modules/InformUserLocation/Containers/mutations\";\nimport { removeLocationWithUserListMutation } from './mutations';\nexport var Location = function Location(_ref) {\n  _s();\n\n  var _id = _ref._id,\n      locationId = _ref.locationId,\n      nameSection = _ref.nameSection,\n      handleClick = _ref.handleClick;\n\n  var _useMutation = useMutation(addLocationsUserListMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addLocationsUserList = _useMutation2[0];\n\n  var _useMutation3 = useMutation(removeLocationWithUserListMutation),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      removeLocationWithUserList = _useMutation4[0];\n\n  var _useQuery = useQuery(locationQuery, {\n    variables: {\n      _id: locationId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var updateLocationMyList = function updateLocationMyList() {\n    addLocationsUserList({\n      variables: {\n        _id: _id,\n        action: 'visited'\n      }\n    }).then(function (data) {\n      if (data) {\n        handleClick('wantToVisit');\n      }\n    });\n  };\n\n  var removeLocation = function removeLocation() {\n    removeLocationWithUserList({\n      variables: {\n        _id: _id\n      }\n    }).then(function (data) {\n      if (data) {\n        handleClick(nameSection);\n      }\n    });\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, _this);\n  if (error) return \"Error! \".concat(error);\n  var location = data.location;\n  return /*#__PURE__*/_jsxDEV(VisualContent, {\n    location: location,\n    nameSection: nameSection,\n    updateLocationMyList: updateLocationMyList,\n    removeLocation: removeLocation\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Location, \"w4gPLmTX+MkOjuGP2e1rdjdglLM=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["D:/web/travel_guide/client/Containers/Location/Location.tsx"],"names":["React","useMutation","useQuery","locationQuery","Loading","VisualContent","addLocationsUserListMutation","removeLocationWithUserListMutation","Location","_id","locationId","nameSection","handleClick","addLocationsUserList","removeLocationWithUserList","variables","loading","error","data","updateLocationMyList","action","then","removeLocation","location"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,kBAAvC;AACA,SAASC,4BAAT,QAA6C,uDAA7C;AACA,SAASC,kCAAT,QAAmD,aAAnD;AASA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAAwD;AAAA;;AAAA,MAArDC,GAAqD,QAArDA,GAAqD;AAAA,MAAhDC,UAAgD,QAAhDA,UAAgD;AAAA,MAApCC,WAAoC,QAApCA,WAAoC;AAAA,MAAvBC,WAAuB,QAAvBA,WAAuB;;AAAA,qBACtEX,WAAW,CAACK,4BAAD,CAD2D;AAAA;AAAA,MAC/FO,oBAD+F;;AAAA,sBAEhEZ,WAAW,CAACM,kCAAD,CAFqD;AAAA;AAAA,MAE/FO,0BAF+F;;AAAA,kBAGtEZ,QAAQ,CAACC,aAAD,EAAgB;AACvDY,IAAAA,SAAS,EAAE;AACTN,MAAAA,GAAG,EAAEC;AADI;AAD4C,GAAhB,CAH8D;AAAA,MAG/FM,OAH+F,aAG/FA,OAH+F;AAAA,MAGtFC,KAHsF,aAGtFA,KAHsF;AAAA,MAG/EC,IAH+E,aAG/EA,IAH+E;;AAQvG,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCN,IAAAA,oBAAoB,CAAC;AACnBE,MAAAA,SAAS,EAAE;AACTN,QAAAA,GAAG,EAAEA,GADI;AAETW,QAAAA,MAAM,EAAE;AAFC;AADQ,KAAD,CAApB,CAKGC,IALH,CAKQ,UAAAH,IAAI,EAAI;AACd,UAAIA,IAAJ,EAAU;AACRN,QAAAA,WAAW,CAAC,aAAD,CAAX;AACD;AACF,KATD;AAUD,GAXD;;AAYA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BR,IAAAA,0BAA0B,CAAC;AACzBC,MAAAA,SAAS,EAAE;AACTN,QAAAA,GAAG,EAAEA;AADI;AADc,KAAD,CAA1B,CAIGY,IAJH,CAIQ,UAAAH,IAAI,EAAI;AACd,UAAIA,IAAJ,EAAU;AACRN,QAAAA,WAAW,CAACD,WAAD,CAAX;AACD;AACF,KARD;AASD,GAVD;;AAWA,MAAIK,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AAhC4F,MAiC/FM,QAjC+F,GAiClFL,IAjCkF,CAiC/FK,QAjC+F;AAmCvG,sBAAO,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAGA,QAA1B;AAAqC,IAAA,WAAW,EAAGZ,WAAnD;AAAiE,IAAA,oBAAoB,EAAGQ,oBAAxF;AAA+G,IAAA,cAAc,EAAGG;AAAhI;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CApCM;;GAAMd,Q;UACsBP,W,EACMA,W,EACNC,Q;;;KAHtBM,Q","sourcesContent":["import React from \"react\"\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { locationQuery } from \"./querys\"\r\nimport { Loading, VisualContent } from \"../../Components\"\r\nimport { addLocationsUserListMutation } from \"../../modules/InformUserLocation/Containers/mutations\"\r\nimport { removeLocationWithUserListMutation } from './mutations'\r\n\r\ntype LocationProps = {\r\n  _id: string\r\n  locationId: string\r\n  nameSection: string\r\n  handleClick: (arg: string) => void\r\n}\r\n\r\nexport const Location: React.FC<LocationProps> = ({ _id, locationId, nameSection, handleClick }): any => {\r\n  const [ addLocationsUserList ] = useMutation(addLocationsUserListMutation)\r\n  const [ removeLocationWithUserList ] = useMutation(removeLocationWithUserListMutation)\r\n  const { loading, error, data } = useQuery(locationQuery, {\r\n    variables: {\r\n      _id: locationId\r\n    }\r\n  })\r\n  const updateLocationMyList = () => {\r\n    addLocationsUserList({\r\n      variables: {\r\n        _id: _id,\r\n        action: 'visited'\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        handleClick('wantToVisit')\r\n      }\r\n    })\r\n  }\r\n  const removeLocation = () => {\r\n    removeLocationWithUserList({\r\n      variables: {\r\n        _id: _id\r\n      }\r\n    }).then(data => {\r\n      if (data) {\r\n        handleClick(nameSection)\r\n      }\r\n    })\r\n  }\r\n  if (loading) return <Loading />\r\n  if (error) return `Error! ${error}`\r\n  const { location } = data\r\n\r\n  return <VisualContent location={ location } nameSection={ nameSection } updateLocationMyList={ updateLocationMyList } removeLocation={ removeLocation } />\r\n}"]},"metadata":{},"sourceType":"module"}