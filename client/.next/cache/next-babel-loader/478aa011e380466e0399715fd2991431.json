{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\Components\\\\Formik\\\\Textarea.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { ErrorMessage, Field } from 'formik';\nimport { css } from \"aphrodite/no-important\";\nimport { TextError } from \"..\";\nimport styles from \"./styles\";\nexport const TextArea = ({\n  name,\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css(styles.wrapperTextarea),\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      id: name,\n      name: name,\n      children: (_ref) => {\n        let {\n          field,\n          form\n        } = _ref,\n            rest = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n        const {\n          value\n        } = field;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: name,\n            className: css(styles.label, styles.labelTextarea, value !== '' ? styles.labelTouched : null),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", _objectSpread(_objectSpread(_objectSpread({\n            id: name,\n            name: name\n          }, field), rest), {}, {\n            className: css(styles.textarea)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: name,\n      className: \"bottom\",\n      component: TextError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/Components/Formik/Textarea.tsx"],"names":["React","ErrorMessage","Field","css","TextError","styles","TextArea","name","label","wrapperTextarea","field","form","rest","value","labelTextarea","labelTouched","textarea"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,IAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAOA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACpE,sBAAO;AAAK,IAAA,SAAS,EAAGL,GAAG,CAACE,MAAM,CAACI,eAAR,CAApB;AAAA,4BACL,QAAC,KAAD;AAAO,MAAA,EAAE,EAAGF,IAAZ;AAAmB,MAAA,IAAI,EAAGA,IAA1B;AAAA,gBACG,UAA8B;AAAA,YAA7B;AAAEG,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAA6B;AAAA,YAAXC,IAAW;;AAC7B,cAAM;AAAEC,UAAAA;AAAF,YAAYH,KAAlB;AACA,4BAAO;AAAA,kCACL;AAAO,YAAA,OAAO,EAAGH,IAAjB;AAAwB,YAAA,SAAS,EAAGJ,GAAG,CAACE,MAAM,CAACG,KAAR,EAAeH,MAAM,CAACS,aAAtB,EAAqCD,KAAK,KAAK,EAAV,GAAeR,MAAM,CAACU,YAAtB,GAAqC,IAA1E,CAAvC;AAAA,sBAA4HP;AAA5H;AAAA;AAAA;AAAA;AAAA,kBADK,eAEL;AAAU,YAAA,EAAE,EAAGD,IAAf;AAAsB,YAAA,IAAI,EAAGA;AAA7B,aAAyCG,KAAzC,GAAsDE,IAAtD;AAA6D,YAAA,SAAS,EAAGT,GAAG,CAACE,MAAM,CAACW,QAAR;AAA5E;AAAA;AAAA;AAAA;AAAA,kBAFK;AAAA,wBAAP;AAID;AAPH;AAAA;AAAA;AAAA;AAAA,YADK,eAUL,QAAC,YAAD;AAAc,MAAA,IAAI,EAAGT,IAArB;AAA4B,MAAA,SAAS,EAAC,QAAtC;AAA+C,MAAA,SAAS,EAAGH;AAA3D;AAAA;AAAA;AAAA;AAAA,YAVK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYD,CAbM","sourcesContent":["import React from \"react\"\r\nimport { ErrorMessage, Field } from 'formik'\r\nimport { css } from \"aphrodite/no-important\"\r\nimport { TextError } from \"..\"\r\nimport styles from \"./styles\"\r\n\r\ntype TextAreaProps = {\r\n  name: string\r\n  label: string\r\n}\r\n\r\nexport const TextArea: React.FC<TextAreaProps> = ({ name, label }) => {\r\n  return <div className={ css(styles.wrapperTextarea) }>\r\n    <Field id={ name } name={ name } >\r\n      {({ field, form, ...rest }) => {\r\n        const { value } = field\r\n        return <>\r\n          <label htmlFor={ name } className={ css(styles.label, styles.labelTextarea, value !== '' ? styles.labelTouched : null) } >{ label }</label>\r\n          <textarea id={ name } name={ name } { ...field } { ...rest } className={ css(styles.textarea) } />\r\n        </>\r\n      }}\r\n    </Field>\r\n    <ErrorMessage name={ name } className='bottom' component={ TextError } />\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}