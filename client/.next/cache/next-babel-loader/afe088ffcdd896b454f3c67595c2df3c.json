{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\web\\\\travel_guide\\\\client\\\\modules\\\\Comments\\\\Containers\\\\ShowComment.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { css } from \"aphrodite/no-important\";\nimport baseStyle from \"../../../styles\";\nimport { authorQuery } from \"./querys\";\nimport { Avatar, Loading } from \"../../../Components\";\nimport { Comment } from \"../Components/Comment\";\nexport const ShowComment = ({\n  _id,\n  date,\n  text,\n  idComment,\n  comments,\n  postId\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(authorQuery, {\n    variables: {\n      _id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }, this);\n  if (error) return `Error! ${error}`;\n  const {\n    author\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css(baseStyle.flexVFS),\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      avatar: author.avatar,\n      name: author.name,\n      size: \"S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Comment, {\n      name: author.name,\n      date: date,\n      text: text,\n      idComment: idComment,\n      comments: comments,\n      postId: postId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["D:/web/travel_guide/client/modules/Comments/Containers/ShowComment.tsx"],"names":["React","useQuery","css","baseStyle","authorQuery","Avatar","Loading","Comment","ShowComment","_id","date","text","idComment","comments","postId","loading","error","data","variables","author","flexVFS","avatar","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,qBAAhC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAWA,OAAO,MAAMC,WAAyC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,QAA9B;AAAwCC,EAAAA;AAAxC,CAAD,KAA2D;AAClH,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BhB,QAAQ,CAACG,WAAD,EAAc;AACrDc,IAAAA,SAAS,EAAE;AAAET,MAAAA;AAAF;AAD0C,GAAd,CAAzC;AAGA,MAAIM,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AACX,QAAM;AAAEG,IAAAA;AAAF,MAAaF,IAAnB;AACA,sBAAO;AAAS,IAAA,SAAS,EAAGf,GAAG,CAACC,SAAS,CAACiB,OAAX,CAAxB;AAAA,4BACL,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAGD,MAAM,CAACE,MAAxB;AAAiC,MAAA,IAAI,EAAGF,MAAM,CAACG,IAA/C;AAAsD,MAAA,IAAI,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,QAAC,OAAD;AAAS,MAAA,IAAI,EAAGH,MAAM,CAACG,IAAvB;AAA8B,MAAA,IAAI,EAAGZ,IAArC;AAA4C,MAAA,IAAI,EAAGC,IAAnD;AAA0D,MAAA,SAAS,EAAGC,SAAtE;AAAkF,MAAA,QAAQ,EAAGC,QAA7F;AAAwG,MAAA,MAAM,EAAGC;AAAjH;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CAXM","sourcesContent":["import React from \"react\"\r\nimport { useQuery } from \"@apollo/react-hooks\"\r\nimport { css } from \"aphrodite/no-important\"\r\nimport baseStyle from \"../../../styles\"\r\nimport { authorQuery } from \"./querys\"\r\nimport { Avatar, Loading } from \"../../../Components\"\r\nimport { Comment } from \"../Components/Comment\"\r\n\r\ntype MyShowCommentProps = {\r\n  _id: string\r\n  date: string\r\n  text: string\r\n  idComment: string | undefined\r\n  comments: any[]\r\n  postId: string\r\n}\r\n\r\nexport const ShowComment: React.FC<MyShowCommentProps> = ({ _id, date, text, idComment, comments, postId }): any => {\r\n  const { loading, error, data } = useQuery(authorQuery, {\r\n    variables: { _id }\r\n  })\r\n  if (loading) return <Loading />\r\n  if (error) return `Error! ${error}`\r\n  const { author } = data\r\n  return <section className={ css(baseStyle.flexVFS) }>\r\n    <Avatar avatar={ author.avatar } name={ author.name } size='S' />\r\n    <Comment name={ author.name } date={ date } text={ text } idComment={ idComment } comments={ comments } postId={ postId } />\r\n  </section>\r\n}"]},"metadata":{},"sourceType":"module"}